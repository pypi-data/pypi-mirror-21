Metadata-Version: 1.1
Name: pip_upgrader
Version: 0.1.0
Summary: An interactive pip requirements upgrader. It also updates the version in your requirements.txt file.
Home-page: https://github.com/simion/pip-upgrader
Author: Simion Baws
Author-email: simion.agv@gmail.com
License: MIT
Description: pip-upgrader
        =========
        
        *An interactive pip requirements upgrader. Because upgrading requirements, package by package, is a pain in the ass.
        It also updates the version in your requirements.txt file.
        
        
        Purpose
        -------
        
        This cli tools helps you interactively(or not) upgrade packages from requirements file,
        and also **update the pinned version from requirements file(s)**.
        
        If no requirements are given, the command **attempts to detect the requirements file(s)** in the current directory.
        
        Usage
        -----
        
        ::
        
            $ pip-upgrade [<requirements_file>] ... [--prerelease] [-p=<package>...]
        
        Arguments:
            requirements_file       The requirement FILE, or WILDCARD PATH to multiple files.
            --prerelease            Include prerelease versions for upgrade, when querying pypi repositories.
            -p <package>            Pre-choose which packages tp upgrade. Skips any prompt.
        
        
        Examples:
        
        ::
        
            pip-upgrade             # auto discovers requirements file
            pip-upgrade requirements.txt
            pip-upgrade requirements/dev.txt requirements/production.txt
            pip-upgrade requirements.txt -p django -p celery
            pip-upgrade requirements.txt -p all
        
        
        Have fun! :)
        
        ::
        Note for me:
        Release new version:
        ::
        
            $ python setup.py sdist bdist_wheel
            $ twine upload dist/*
        
        This will build both a source tarball of your CLI tool, as well as a newer wheel
        build (*and this will, by default, run on all platforms*).
        
        The ``twine upload`` command (which requires you to install the `twine
        <https://pypi.python.org/pypi/twine>`_ tool) will then securely upload your
        new package to PyPI so everyone in the world can use it!
        
Keywords: cli,pip,pypi,requirements,upgrade
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Topic :: Utilities
Classifier: License :: Public Domain
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
