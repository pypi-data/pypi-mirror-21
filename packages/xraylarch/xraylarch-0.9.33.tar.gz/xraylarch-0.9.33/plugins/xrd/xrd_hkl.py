#!/usr/bin/env python
'''
Diffraction functions require for fitting and analyzing data.

mkak 2017.02.06 (originally written spring 2016)
'''

##########################################################################
# IMPORT PYTHON PACKAGES

##########################################################################
# FUNCTIONS
                                                            ## h^2+k^2+l^2 <= 50
allhkl = [[0,0,1],[0,1,0],[1,0,0],                          ##  1
          [0,1,1],[1,0,1],[1,1,0],                          ##  2
          [1,1,1],                                          ##  3
          [0,0,2],[0,2,0],[2,0,0],                          ##  4
          [2,0,1],[2,1,0],[1,2,0],[1,0,2],[0,2,1],[0,1,2],  ##  5
          [2,1,1],[1,2,1],[1,1,2],                          ##  6
          [2,2,0],[2,0,2],[0,2,2],                          ##  8
          [2,2,1],[2,1,2],[1,2,2],[0,0,3],[0,3,0],[3,0,0],  ##  9
          [3,1,0],[3,0,1],[1,0,3],[1,3,0],[0,1,3],[0,3,1],  ## 10
          [3,1,1],[1,3,1],[1,1,3],                          ## 11
          [2,2,2],                                          ## 12
          [3,2,0],[3,0,2],[2,0,3],[2,3,0],[0,3,2],[0,2,3],  ## 13
          [3,2,1],[3,1,2],[2,1,3],[2,3,1],[1,3,2],[1,2,3],  ## 14
          [0,0,4],[0,4,0],[4,0,0],                          ## 16
          [1,0,4],[1,4,0],[4,0,1],[4,1,0],[0,4,1],[0,1,4],  ## 17
          [2,2,3],[2,3,2],[3,2,2],
          [1,1,4],[1,4,1],[4,1,1],[0,3,3],[3,3,0],[3,0,3],  ## 18
          [3,3,1],[3,1,3],[1,3,3],                          ## 19
          [0,2,4],[0,4,2],[4,2,0],[4,0,2],[2,4,0],[2,0,4],  ## 20
          [1,2,4],[1,4,2],[4,2,1],[4,1,2],[2,4,1],[2,1,4],  ## 21
          [3,3,2],[3,2,3],[2,3,3],                          ## 22
          [2,2,4],[2,4,2],[4,2,2],                          ## 24
          [3,0,4],[3,4,0],[4,0,3],[4,3,0],[0,4,3],[0,3,4],  ## 25
          [0,0,5],[0,5,0],[5,0,0],
          [1,0,5],[1,5,0],[5,0,1],[5,1,0],[0,5,1],[0,1,5],  ## 26
          [3,1,4],[3,4,1],[4,1,3],[4,3,1],[1,4,3],[1,3,4],
          [3,3,3],[1,1,5],[1,5,1],[5,1,1],                  ## 27
          [2,0,5],[2,5,0],[5,0,2],[5,2,0],[0,2,5],[0,5,2],  ## 29
          [3,2,4],[3,4,2],[4,2,3],[4,3,2],[2,4,3],[2,3,4],
          [2,1,5],[2,5,1],[5,1,2],[5,2,1],[1,2,5],[1,5,2],  ## 30
          [4,4,0],[4,0,4],[0,4,4],                          ## 32
          [4,4,1],[4,1,4],[1,4,4],[2,2,5],[2,5,2],[5,2,2],  ## 33
          [3,0,5],[3,5,0],[5,0,3],[5,3,0],[0,3,5],[0,5,3],  ## 34
          [3,3,4],[3,4,3],[4,3,3],
          [3,1,5],[3,5,1],[5,1,3],[5,3,1],[1,3,5],[1,5,3],  ## 35
          [4,4,2],[4,2,4],[2,4,4],[0,0,6],[0,6,0],[6,0,0],  ## 36
          [1,0,6],[0,6,1],[6,1,0],[0,1,6],[1,6,0],[6,0,1],  ## 37
          [3,2,5],[3,5,2],[5,2,3],[5,3,2],[2,5,3],[2,3,5],  ## 38
          [1,1,6],[1,6,1],[6,1,1],
          [6,2,0],[6,0,2],[0,2,6],[0,6,2],[2,0,6],[2,6,0],  ## 40
          [6,2,1],[6,1,2],[1,2,6],[1,6,2],[2,1,6],[2,6,1],  ## 41
          [0,4,5],[0,5,4],[5,4,0],[5,0,4],[4,5,0],[4,0,5],
          [4,4,3],[4,3,4],[3,4,4],
          [1,4,5],[1,5,4],[5,4,1],[5,1,4],[4,5,1],[4,1,5],  ## 42
          [3,3,5],[3,5,3],[5,3,3],                          ## 43
          [2,2,6],[2,6,2],[6,2,2],                          ## 44
          [6,3,0],[6,0,3],[0,3,6],[0,6,3],[3,0,6],[3,6,0],  ## 45
          [2,4,5],[2,5,4],[5,4,2],[5,2,4],[4,5,2],[4,2,5],
          [6,3,1],[6,1,3],[1,3,6],[1,6,3],[3,1,6],[3,6,1],  ## 46
          [4,4,4],                                          ## 48
          [6,3,2],[6,2,3],[2,3,6],[2,6,3],[3,2,6],[3,6,2],  ## 49
          [0,0,7],[0,7,0],[7,0,0],
          [3,4,5],[3,5,4],[5,4,3],[5,3,4],[4,5,3],[4,3,5],  ## 50
          [7,0,1],[7,1,0],[1,0,7],[1,7,0],[0,7,1],[0,1,7],
          [5,5,0],[5,0,5],[0,5,5],
          ]

def generate_hkl(maxval=50, symmetry=None):

    if maxval == 50:
        return allhkl
    else:
        hkllist = []
        for hkl in allhkl:
            if maxval >= (hkl[0]**2 + hkl[1]**2 + hkl[2]**2):
                hkllist += [hkl]
        return hkllist

                     
def registerLarchPlugin():
    return ('_xrd', {'generate_hkl': generate_hkl})
