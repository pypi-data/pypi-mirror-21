# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: syntaxnet/sentence.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='syntaxnet/sentence.proto',
  package='syntaxnet',
  syntax='proto2',
  serialized_pb=_b('\n\x18syntaxnet/sentence.proto\x12\tsyntaxnet\"S\n\x08Sentence\x12\r\n\x05\x64ocid\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\x12\x1f\n\x05token\x18\x03 \x03(\x0b\x32\x10.syntaxnet.Token*\t\x08\xe8\x07\x10\x80\x80\x80\x80\x02\"\x8c\x02\n\x05Token\x12\x0c\n\x04word\x18\x01 \x02(\t\x12\r\n\x05start\x18\x02 \x02(\x05\x12\x0b\n\x03\x65nd\x18\x03 \x02(\x05\x12\x10\n\x04head\x18\x04 \x01(\x05:\x02-1\x12\x0b\n\x03tag\x18\x05 \x01(\t\x12\x10\n\x08\x63\x61tegory\x18\x06 \x01(\t\x12\r\n\x05label\x18\x07 \x01(\t\x12=\n\x0b\x62reak_level\x18\x08 \x01(\x0e\x32\x1b.syntaxnet.Token.BreakLevel:\x0bSPACE_BREAK\"O\n\nBreakLevel\x12\x0c\n\x08NO_BREAK\x10\x00\x12\x0f\n\x0bSPACE_BREAK\x10\x01\x12\x0e\n\nLINE_BREAK\x10\x02\x12\x12\n\x0eSENTENCE_BREAK\x10\x03*\t\x08\xe8\x07\x10\x80\x80\x80\x80\x02\"\xb9\x01\n\x0fTokenMorphology\x12\x37\n\tattribute\x18\x03 \x03(\x0b\x32$.syntaxnet.TokenMorphology.Attribute\x1a(\n\tAttribute\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t2C\n\nmorphology\x12\x10.syntaxnet.Token\x18\x8d\x98\xbf\x1e \x01(\x0b\x32\x1a.syntaxnet.TokenMorphology')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_TOKEN_BREAKLEVEL = _descriptor.EnumDescriptor(
  name='BreakLevel',
  full_name='syntaxnet.Token.BreakLevel',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_BREAK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPACE_BREAK', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LINE_BREAK', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SENTENCE_BREAK', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=303,
  serialized_end=382,
)
_sym_db.RegisterEnumDescriptor(_TOKEN_BREAKLEVEL)


_SENTENCE = _descriptor.Descriptor(
  name='Sentence',
  full_name='syntaxnet.Sentence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='docid', full_name='syntaxnet.Sentence.docid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='text', full_name='syntaxnet.Sentence.text', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='token', full_name='syntaxnet.Sentence.token', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=True,
  syntax='proto2',
  extension_ranges=[(1000, 536870912), ],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=122,
)


_TOKEN = _descriptor.Descriptor(
  name='Token',
  full_name='syntaxnet.Token',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='word', full_name='syntaxnet.Token.word', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='syntaxnet.Token.start', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end', full_name='syntaxnet.Token.end', index=2,
      number=3, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='head', full_name='syntaxnet.Token.head', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tag', full_name='syntaxnet.Token.tag', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='category', full_name='syntaxnet.Token.category', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='syntaxnet.Token.label', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='break_level', full_name='syntaxnet.Token.break_level', index=7,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TOKEN_BREAKLEVEL,
  ],
  options=None,
  is_extendable=True,
  syntax='proto2',
  extension_ranges=[(1000, 536870912), ],
  oneofs=[
  ],
  serialized_start=125,
  serialized_end=393,
)


_TOKENMORPHOLOGY_ATTRIBUTE = _descriptor.Descriptor(
  name='Attribute',
  full_name='syntaxnet.TokenMorphology.Attribute',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='syntaxnet.TokenMorphology.Attribute.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='syntaxnet.TokenMorphology.Attribute.value', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=472,
  serialized_end=512,
)

_TOKENMORPHOLOGY = _descriptor.Descriptor(
  name='TokenMorphology',
  full_name='syntaxnet.TokenMorphology',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='attribute', full_name='syntaxnet.TokenMorphology.attribute', index=0,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
    _descriptor.FieldDescriptor(
      name='morphology', full_name='syntaxnet.TokenMorphology.morphology', index=0,
      number=63949837, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=True, extension_scope=None,
      options=None),
  ],
  nested_types=[_TOKENMORPHOLOGY_ATTRIBUTE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=396,
  serialized_end=581,
)

_SENTENCE.fields_by_name['token'].message_type = _TOKEN
_TOKEN.fields_by_name['break_level'].enum_type = _TOKEN_BREAKLEVEL
_TOKEN_BREAKLEVEL.containing_type = _TOKEN
_TOKENMORPHOLOGY_ATTRIBUTE.containing_type = _TOKENMORPHOLOGY
_TOKENMORPHOLOGY.fields_by_name['attribute'].message_type = _TOKENMORPHOLOGY_ATTRIBUTE
DESCRIPTOR.message_types_by_name['Sentence'] = _SENTENCE
DESCRIPTOR.message_types_by_name['Token'] = _TOKEN
DESCRIPTOR.message_types_by_name['TokenMorphology'] = _TOKENMORPHOLOGY

Sentence = _reflection.GeneratedProtocolMessageType('Sentence', (_message.Message,), dict(
  DESCRIPTOR = _SENTENCE,
  __module__ = 'syntaxnet.sentence_pb2'
  # @@protoc_insertion_point(class_scope:syntaxnet.Sentence)
  ))
_sym_db.RegisterMessage(Sentence)

Token = _reflection.GeneratedProtocolMessageType('Token', (_message.Message,), dict(
  DESCRIPTOR = _TOKEN,
  __module__ = 'syntaxnet.sentence_pb2'
  # @@protoc_insertion_point(class_scope:syntaxnet.Token)
  ))
_sym_db.RegisterMessage(Token)

TokenMorphology = _reflection.GeneratedProtocolMessageType('TokenMorphology', (_message.Message,), dict(

  Attribute = _reflection.GeneratedProtocolMessageType('Attribute', (_message.Message,), dict(
    DESCRIPTOR = _TOKENMORPHOLOGY_ATTRIBUTE,
    __module__ = 'syntaxnet.sentence_pb2'
    # @@protoc_insertion_point(class_scope:syntaxnet.TokenMorphology.Attribute)
    ))
  ,
  DESCRIPTOR = _TOKENMORPHOLOGY,
  __module__ = 'syntaxnet.sentence_pb2'
  # @@protoc_insertion_point(class_scope:syntaxnet.TokenMorphology)
  ))
_sym_db.RegisterMessage(TokenMorphology)
_sym_db.RegisterMessage(TokenMorphology.Attribute)

_TOKENMORPHOLOGY.extensions_by_name['morphology'].message_type = _TOKENMORPHOLOGY
Token.RegisterExtension(_TOKENMORPHOLOGY.extensions_by_name['morphology'])

# @@protoc_insertion_point(module_scope)
