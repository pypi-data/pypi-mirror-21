# coding: utf-8

"""
    OpenShift API (with Kubernetes)

    OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use openshift.client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a openshift.client. By listing and beginning a watch from the returned resourceVersion, openshift.clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so openshift.clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'unversioned.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but openshift.clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information. 

    OpenAPI spec version: v1.5.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import openshift.client
from kubernetes.client.rest import ApiException
from openshift.client.apis.core_v1_api import CoreV1Api


class TestCoreV1Api(unittest.TestCase):
    """ CoreV1Api unit test stubs """

    def setUp(self):
        self.api = openshift.client.apis.core_v1_api.CoreV1Api()

    def tearDown(self):
        pass

    def test_connect_delete_namespaced_pod_proxy(self):
        """
        Test case for connect_delete_namespaced_pod_proxy

        
        """
        pass

    def test_connect_delete_namespaced_pod_proxy_with_path(self):
        """
        Test case for connect_delete_namespaced_pod_proxy_with_path

        
        """
        pass

    def test_connect_delete_namespaced_service_proxy(self):
        """
        Test case for connect_delete_namespaced_service_proxy

        
        """
        pass

    def test_connect_delete_namespaced_service_proxy_with_path(self):
        """
        Test case for connect_delete_namespaced_service_proxy_with_path

        
        """
        pass

    def test_connect_delete_node_proxy(self):
        """
        Test case for connect_delete_node_proxy

        
        """
        pass

    def test_connect_delete_node_proxy_with_path(self):
        """
        Test case for connect_delete_node_proxy_with_path

        
        """
        pass

    def test_connect_get_namespaced_pod_attach(self):
        """
        Test case for connect_get_namespaced_pod_attach

        
        """
        pass

    def test_connect_get_namespaced_pod_exec(self):
        """
        Test case for connect_get_namespaced_pod_exec

        
        """
        pass

    def test_connect_get_namespaced_pod_portforward(self):
        """
        Test case for connect_get_namespaced_pod_portforward

        
        """
        pass

    def test_connect_get_namespaced_pod_proxy(self):
        """
        Test case for connect_get_namespaced_pod_proxy

        
        """
        pass

    def test_connect_get_namespaced_pod_proxy_with_path(self):
        """
        Test case for connect_get_namespaced_pod_proxy_with_path

        
        """
        pass

    def test_connect_get_namespaced_service_proxy(self):
        """
        Test case for connect_get_namespaced_service_proxy

        
        """
        pass

    def test_connect_get_namespaced_service_proxy_with_path(self):
        """
        Test case for connect_get_namespaced_service_proxy_with_path

        
        """
        pass

    def test_connect_get_node_proxy(self):
        """
        Test case for connect_get_node_proxy

        
        """
        pass

    def test_connect_get_node_proxy_with_path(self):
        """
        Test case for connect_get_node_proxy_with_path

        
        """
        pass

    def test_connect_head_namespaced_pod_proxy(self):
        """
        Test case for connect_head_namespaced_pod_proxy

        
        """
        pass

    def test_connect_head_namespaced_pod_proxy_with_path(self):
        """
        Test case for connect_head_namespaced_pod_proxy_with_path

        
        """
        pass

    def test_connect_head_namespaced_service_proxy(self):
        """
        Test case for connect_head_namespaced_service_proxy

        
        """
        pass

    def test_connect_head_namespaced_service_proxy_with_path(self):
        """
        Test case for connect_head_namespaced_service_proxy_with_path

        
        """
        pass

    def test_connect_head_node_proxy(self):
        """
        Test case for connect_head_node_proxy

        
        """
        pass

    def test_connect_head_node_proxy_with_path(self):
        """
        Test case for connect_head_node_proxy_with_path

        
        """
        pass

    def test_connect_options_namespaced_pod_proxy(self):
        """
        Test case for connect_options_namespaced_pod_proxy

        
        """
        pass

    def test_connect_options_namespaced_pod_proxy_with_path(self):
        """
        Test case for connect_options_namespaced_pod_proxy_with_path

        
        """
        pass

    def test_connect_options_namespaced_service_proxy(self):
        """
        Test case for connect_options_namespaced_service_proxy

        
        """
        pass

    def test_connect_options_namespaced_service_proxy_with_path(self):
        """
        Test case for connect_options_namespaced_service_proxy_with_path

        
        """
        pass

    def test_connect_options_node_proxy(self):
        """
        Test case for connect_options_node_proxy

        
        """
        pass

    def test_connect_options_node_proxy_with_path(self):
        """
        Test case for connect_options_node_proxy_with_path

        
        """
        pass

    def test_connect_post_namespaced_pod_attach(self):
        """
        Test case for connect_post_namespaced_pod_attach

        
        """
        pass

    def test_connect_post_namespaced_pod_exec(self):
        """
        Test case for connect_post_namespaced_pod_exec

        
        """
        pass

    def test_connect_post_namespaced_pod_portforward(self):
        """
        Test case for connect_post_namespaced_pod_portforward

        
        """
        pass

    def test_connect_post_namespaced_pod_proxy(self):
        """
        Test case for connect_post_namespaced_pod_proxy

        
        """
        pass

    def test_connect_post_namespaced_pod_proxy_with_path(self):
        """
        Test case for connect_post_namespaced_pod_proxy_with_path

        
        """
        pass

    def test_connect_post_namespaced_service_proxy(self):
        """
        Test case for connect_post_namespaced_service_proxy

        
        """
        pass

    def test_connect_post_namespaced_service_proxy_with_path(self):
        """
        Test case for connect_post_namespaced_service_proxy_with_path

        
        """
        pass

    def test_connect_post_node_proxy(self):
        """
        Test case for connect_post_node_proxy

        
        """
        pass

    def test_connect_post_node_proxy_with_path(self):
        """
        Test case for connect_post_node_proxy_with_path

        
        """
        pass

    def test_connect_put_namespaced_pod_proxy(self):
        """
        Test case for connect_put_namespaced_pod_proxy

        
        """
        pass

    def test_connect_put_namespaced_pod_proxy_with_path(self):
        """
        Test case for connect_put_namespaced_pod_proxy_with_path

        
        """
        pass

    def test_connect_put_namespaced_service_proxy(self):
        """
        Test case for connect_put_namespaced_service_proxy

        
        """
        pass

    def test_connect_put_namespaced_service_proxy_with_path(self):
        """
        Test case for connect_put_namespaced_service_proxy_with_path

        
        """
        pass

    def test_connect_put_node_proxy(self):
        """
        Test case for connect_put_node_proxy

        
        """
        pass

    def test_connect_put_node_proxy_with_path(self):
        """
        Test case for connect_put_node_proxy_with_path

        
        """
        pass

    def test_create_binding_for_all_namespaces(self):
        """
        Test case for create_binding_for_all_namespaces

        
        """
        pass

    def test_create_config_map_for_all_namespaces(self):
        """
        Test case for create_config_map_for_all_namespaces

        
        """
        pass

    def test_create_endpoints_for_all_namespaces(self):
        """
        Test case for create_endpoints_for_all_namespaces

        
        """
        pass

    def test_create_event_for_all_namespaces(self):
        """
        Test case for create_event_for_all_namespaces

        
        """
        pass

    def test_create_limit_range_for_all_namespaces(self):
        """
        Test case for create_limit_range_for_all_namespaces

        
        """
        pass

    def test_create_namespace(self):
        """
        Test case for create_namespace

        
        """
        pass

    def test_create_namespaced_binding(self):
        """
        Test case for create_namespaced_binding

        
        """
        pass

    def test_create_namespaced_binding_binding(self):
        """
        Test case for create_namespaced_binding_binding

        
        """
        pass

    def test_create_namespaced_config_map(self):
        """
        Test case for create_namespaced_config_map

        
        """
        pass

    def test_create_namespaced_endpoints(self):
        """
        Test case for create_namespaced_endpoints

        
        """
        pass

    def test_create_namespaced_event(self):
        """
        Test case for create_namespaced_event

        
        """
        pass

    def test_create_namespaced_eviction_eviction(self):
        """
        Test case for create_namespaced_eviction_eviction

        
        """
        pass

    def test_create_namespaced_limit_range(self):
        """
        Test case for create_namespaced_limit_range

        
        """
        pass

    def test_create_namespaced_persistent_volume_claim(self):
        """
        Test case for create_namespaced_persistent_volume_claim

        
        """
        pass

    def test_create_namespaced_pod(self):
        """
        Test case for create_namespaced_pod

        
        """
        pass

    def test_create_namespaced_pod_template(self):
        """
        Test case for create_namespaced_pod_template

        
        """
        pass

    def test_create_namespaced_replication_controller(self):
        """
        Test case for create_namespaced_replication_controller

        
        """
        pass

    def test_create_namespaced_resource_quota(self):
        """
        Test case for create_namespaced_resource_quota

        
        """
        pass

    def test_create_namespaced_secret(self):
        """
        Test case for create_namespaced_secret

        
        """
        pass

    def test_create_namespaced_service(self):
        """
        Test case for create_namespaced_service

        
        """
        pass

    def test_create_namespaced_service_account(self):
        """
        Test case for create_namespaced_service_account

        
        """
        pass

    def test_create_node(self):
        """
        Test case for create_node

        
        """
        pass

    def test_create_persistent_volume(self):
        """
        Test case for create_persistent_volume

        
        """
        pass

    def test_create_persistent_volume_claim_for_all_namespaces(self):
        """
        Test case for create_persistent_volume_claim_for_all_namespaces

        
        """
        pass

    def test_create_pod_for_all_namespaces(self):
        """
        Test case for create_pod_for_all_namespaces

        
        """
        pass

    def test_create_pod_template_for_all_namespaces(self):
        """
        Test case for create_pod_template_for_all_namespaces

        
        """
        pass

    def test_create_replication_controller_for_all_namespaces(self):
        """
        Test case for create_replication_controller_for_all_namespaces

        
        """
        pass

    def test_create_resource_quota_for_all_namespaces(self):
        """
        Test case for create_resource_quota_for_all_namespaces

        
        """
        pass

    def test_create_secret_for_all_namespaces(self):
        """
        Test case for create_secret_for_all_namespaces

        
        """
        pass

    def test_create_security_context_constraints(self):
        """
        Test case for create_security_context_constraints

        
        """
        pass

    def test_create_service_account_for_all_namespaces(self):
        """
        Test case for create_service_account_for_all_namespaces

        
        """
        pass

    def test_create_service_for_all_namespaces(self):
        """
        Test case for create_service_for_all_namespaces

        
        """
        pass

    def test_delete_collection_namespace(self):
        """
        Test case for delete_collection_namespace

        
        """
        pass

    def test_delete_collection_namespaced_config_map(self):
        """
        Test case for delete_collection_namespaced_config_map

        
        """
        pass

    def test_delete_collection_namespaced_endpoints(self):
        """
        Test case for delete_collection_namespaced_endpoints

        
        """
        pass

    def test_delete_collection_namespaced_event(self):
        """
        Test case for delete_collection_namespaced_event

        
        """
        pass

    def test_delete_collection_namespaced_limit_range(self):
        """
        Test case for delete_collection_namespaced_limit_range

        
        """
        pass

    def test_delete_collection_namespaced_persistent_volume_claim(self):
        """
        Test case for delete_collection_namespaced_persistent_volume_claim

        
        """
        pass

    def test_delete_collection_namespaced_pod(self):
        """
        Test case for delete_collection_namespaced_pod

        
        """
        pass

    def test_delete_collection_namespaced_pod_template(self):
        """
        Test case for delete_collection_namespaced_pod_template

        
        """
        pass

    def test_delete_collection_namespaced_replication_controller(self):
        """
        Test case for delete_collection_namespaced_replication_controller

        
        """
        pass

    def test_delete_collection_namespaced_resource_quota(self):
        """
        Test case for delete_collection_namespaced_resource_quota

        
        """
        pass

    def test_delete_collection_namespaced_secret(self):
        """
        Test case for delete_collection_namespaced_secret

        
        """
        pass

    def test_delete_collection_namespaced_service_account(self):
        """
        Test case for delete_collection_namespaced_service_account

        
        """
        pass

    def test_delete_collection_node(self):
        """
        Test case for delete_collection_node

        
        """
        pass

    def test_delete_collection_persistent_volume(self):
        """
        Test case for delete_collection_persistent_volume

        
        """
        pass

    def test_delete_collection_security_context_constraints(self):
        """
        Test case for delete_collection_security_context_constraints

        
        """
        pass

    def test_delete_namespace(self):
        """
        Test case for delete_namespace

        
        """
        pass

    def test_delete_namespaced_config_map(self):
        """
        Test case for delete_namespaced_config_map

        
        """
        pass

    def test_delete_namespaced_endpoints(self):
        """
        Test case for delete_namespaced_endpoints

        
        """
        pass

    def test_delete_namespaced_event(self):
        """
        Test case for delete_namespaced_event

        
        """
        pass

    def test_delete_namespaced_limit_range(self):
        """
        Test case for delete_namespaced_limit_range

        
        """
        pass

    def test_delete_namespaced_persistent_volume_claim(self):
        """
        Test case for delete_namespaced_persistent_volume_claim

        
        """
        pass

    def test_delete_namespaced_pod(self):
        """
        Test case for delete_namespaced_pod

        
        """
        pass

    def test_delete_namespaced_pod_template(self):
        """
        Test case for delete_namespaced_pod_template

        
        """
        pass

    def test_delete_namespaced_replication_controller(self):
        """
        Test case for delete_namespaced_replication_controller

        
        """
        pass

    def test_delete_namespaced_resource_quota(self):
        """
        Test case for delete_namespaced_resource_quota

        
        """
        pass

    def test_delete_namespaced_secret(self):
        """
        Test case for delete_namespaced_secret

        
        """
        pass

    def test_delete_namespaced_service(self):
        """
        Test case for delete_namespaced_service

        
        """
        pass

    def test_delete_namespaced_service_account(self):
        """
        Test case for delete_namespaced_service_account

        
        """
        pass

    def test_delete_node(self):
        """
        Test case for delete_node

        
        """
        pass

    def test_delete_persistent_volume(self):
        """
        Test case for delete_persistent_volume

        
        """
        pass

    def test_delete_security_context_constraints(self):
        """
        Test case for delete_security_context_constraints

        
        """
        pass

    def test_get_api_resources(self):
        """
        Test case for get_api_resources

        
        """
        pass

    def test_list_component_status(self):
        """
        Test case for list_component_status

        
        """
        pass

    def test_list_config_map_for_all_namespaces(self):
        """
        Test case for list_config_map_for_all_namespaces

        
        """
        pass

    def test_list_endpoints_for_all_namespaces(self):
        """
        Test case for list_endpoints_for_all_namespaces

        
        """
        pass

    def test_list_event_for_all_namespaces(self):
        """
        Test case for list_event_for_all_namespaces

        
        """
        pass

    def test_list_limit_range_for_all_namespaces(self):
        """
        Test case for list_limit_range_for_all_namespaces

        
        """
        pass

    def test_list_namespace(self):
        """
        Test case for list_namespace

        
        """
        pass

    def test_list_namespaced_config_map(self):
        """
        Test case for list_namespaced_config_map

        
        """
        pass

    def test_list_namespaced_endpoints(self):
        """
        Test case for list_namespaced_endpoints

        
        """
        pass

    def test_list_namespaced_event(self):
        """
        Test case for list_namespaced_event

        
        """
        pass

    def test_list_namespaced_limit_range(self):
        """
        Test case for list_namespaced_limit_range

        
        """
        pass

    def test_list_namespaced_persistent_volume_claim(self):
        """
        Test case for list_namespaced_persistent_volume_claim

        
        """
        pass

    def test_list_namespaced_pod(self):
        """
        Test case for list_namespaced_pod

        
        """
        pass

    def test_list_namespaced_pod_template(self):
        """
        Test case for list_namespaced_pod_template

        
        """
        pass

    def test_list_namespaced_replication_controller(self):
        """
        Test case for list_namespaced_replication_controller

        
        """
        pass

    def test_list_namespaced_resource_quota(self):
        """
        Test case for list_namespaced_resource_quota

        
        """
        pass

    def test_list_namespaced_secret(self):
        """
        Test case for list_namespaced_secret

        
        """
        pass

    def test_list_namespaced_service(self):
        """
        Test case for list_namespaced_service

        
        """
        pass

    def test_list_namespaced_service_account(self):
        """
        Test case for list_namespaced_service_account

        
        """
        pass

    def test_list_node(self):
        """
        Test case for list_node

        
        """
        pass

    def test_list_persistent_volume(self):
        """
        Test case for list_persistent_volume

        
        """
        pass

    def test_list_persistent_volume_claim_for_all_namespaces(self):
        """
        Test case for list_persistent_volume_claim_for_all_namespaces

        
        """
        pass

    def test_list_pod_for_all_namespaces(self):
        """
        Test case for list_pod_for_all_namespaces

        
        """
        pass

    def test_list_pod_template_for_all_namespaces(self):
        """
        Test case for list_pod_template_for_all_namespaces

        
        """
        pass

    def test_list_replication_controller_for_all_namespaces(self):
        """
        Test case for list_replication_controller_for_all_namespaces

        
        """
        pass

    def test_list_resource_quota_for_all_namespaces(self):
        """
        Test case for list_resource_quota_for_all_namespaces

        
        """
        pass

    def test_list_secret_for_all_namespaces(self):
        """
        Test case for list_secret_for_all_namespaces

        
        """
        pass

    def test_list_security_context_constraints(self):
        """
        Test case for list_security_context_constraints

        
        """
        pass

    def test_list_service_account_for_all_namespaces(self):
        """
        Test case for list_service_account_for_all_namespaces

        
        """
        pass

    def test_list_service_for_all_namespaces(self):
        """
        Test case for list_service_for_all_namespaces

        
        """
        pass

    def test_patch_namespace(self):
        """
        Test case for patch_namespace

        
        """
        pass

    def test_patch_namespace_status(self):
        """
        Test case for patch_namespace_status

        
        """
        pass

    def test_patch_namespaced_config_map(self):
        """
        Test case for patch_namespaced_config_map

        
        """
        pass

    def test_patch_namespaced_endpoints(self):
        """
        Test case for patch_namespaced_endpoints

        
        """
        pass

    def test_patch_namespaced_event(self):
        """
        Test case for patch_namespaced_event

        
        """
        pass

    def test_patch_namespaced_limit_range(self):
        """
        Test case for patch_namespaced_limit_range

        
        """
        pass

    def test_patch_namespaced_persistent_volume_claim(self):
        """
        Test case for patch_namespaced_persistent_volume_claim

        
        """
        pass

    def test_patch_namespaced_persistent_volume_claim_status(self):
        """
        Test case for patch_namespaced_persistent_volume_claim_status

        
        """
        pass

    def test_patch_namespaced_pod(self):
        """
        Test case for patch_namespaced_pod

        
        """
        pass

    def test_patch_namespaced_pod_status(self):
        """
        Test case for patch_namespaced_pod_status

        
        """
        pass

    def test_patch_namespaced_pod_template(self):
        """
        Test case for patch_namespaced_pod_template

        
        """
        pass

    def test_patch_namespaced_replication_controller(self):
        """
        Test case for patch_namespaced_replication_controller

        
        """
        pass

    def test_patch_namespaced_replication_controller_status(self):
        """
        Test case for patch_namespaced_replication_controller_status

        
        """
        pass

    def test_patch_namespaced_resource_quota(self):
        """
        Test case for patch_namespaced_resource_quota

        
        """
        pass

    def test_patch_namespaced_resource_quota_status(self):
        """
        Test case for patch_namespaced_resource_quota_status

        
        """
        pass

    def test_patch_namespaced_scale_scale(self):
        """
        Test case for patch_namespaced_scale_scale

        
        """
        pass

    def test_patch_namespaced_secret(self):
        """
        Test case for patch_namespaced_secret

        
        """
        pass

    def test_patch_namespaced_service(self):
        """
        Test case for patch_namespaced_service

        
        """
        pass

    def test_patch_namespaced_service_account(self):
        """
        Test case for patch_namespaced_service_account

        
        """
        pass

    def test_patch_namespaced_service_status(self):
        """
        Test case for patch_namespaced_service_status

        
        """
        pass

    def test_patch_node(self):
        """
        Test case for patch_node

        
        """
        pass

    def test_patch_node_status(self):
        """
        Test case for patch_node_status

        
        """
        pass

    def test_patch_persistent_volume(self):
        """
        Test case for patch_persistent_volume

        
        """
        pass

    def test_patch_persistent_volume_status(self):
        """
        Test case for patch_persistent_volume_status

        
        """
        pass

    def test_patch_security_context_constraints(self):
        """
        Test case for patch_security_context_constraints

        
        """
        pass

    def test_proxy_delete_namespaced_pod(self):
        """
        Test case for proxy_delete_namespaced_pod

        
        """
        pass

    def test_proxy_delete_namespaced_pod_with_path(self):
        """
        Test case for proxy_delete_namespaced_pod_with_path

        
        """
        pass

    def test_proxy_delete_namespaced_service(self):
        """
        Test case for proxy_delete_namespaced_service

        
        """
        pass

    def test_proxy_delete_namespaced_service_with_path(self):
        """
        Test case for proxy_delete_namespaced_service_with_path

        
        """
        pass

    def test_proxy_delete_node(self):
        """
        Test case for proxy_delete_node

        
        """
        pass

    def test_proxy_delete_node_with_path(self):
        """
        Test case for proxy_delete_node_with_path

        
        """
        pass

    def test_proxy_get_namespaced_pod(self):
        """
        Test case for proxy_get_namespaced_pod

        
        """
        pass

    def test_proxy_get_namespaced_pod_with_path(self):
        """
        Test case for proxy_get_namespaced_pod_with_path

        
        """
        pass

    def test_proxy_get_namespaced_service(self):
        """
        Test case for proxy_get_namespaced_service

        
        """
        pass

    def test_proxy_get_namespaced_service_with_path(self):
        """
        Test case for proxy_get_namespaced_service_with_path

        
        """
        pass

    def test_proxy_get_node(self):
        """
        Test case for proxy_get_node

        
        """
        pass

    def test_proxy_get_node_with_path(self):
        """
        Test case for proxy_get_node_with_path

        
        """
        pass

    def test_proxy_head_namespaced_pod(self):
        """
        Test case for proxy_head_namespaced_pod

        
        """
        pass

    def test_proxy_head_namespaced_pod_with_path(self):
        """
        Test case for proxy_head_namespaced_pod_with_path

        
        """
        pass

    def test_proxy_head_namespaced_service(self):
        """
        Test case for proxy_head_namespaced_service

        
        """
        pass

    def test_proxy_head_namespaced_service_with_path(self):
        """
        Test case for proxy_head_namespaced_service_with_path

        
        """
        pass

    def test_proxy_head_node(self):
        """
        Test case for proxy_head_node

        
        """
        pass

    def test_proxy_head_node_with_path(self):
        """
        Test case for proxy_head_node_with_path

        
        """
        pass

    def test_proxy_options_namespaced_pod(self):
        """
        Test case for proxy_options_namespaced_pod

        
        """
        pass

    def test_proxy_options_namespaced_pod_with_path(self):
        """
        Test case for proxy_options_namespaced_pod_with_path

        
        """
        pass

    def test_proxy_options_namespaced_service(self):
        """
        Test case for proxy_options_namespaced_service

        
        """
        pass

    def test_proxy_options_namespaced_service_with_path(self):
        """
        Test case for proxy_options_namespaced_service_with_path

        
        """
        pass

    def test_proxy_options_node(self):
        """
        Test case for proxy_options_node

        
        """
        pass

    def test_proxy_options_node_with_path(self):
        """
        Test case for proxy_options_node_with_path

        
        """
        pass

    def test_proxy_post_namespaced_pod(self):
        """
        Test case for proxy_post_namespaced_pod

        
        """
        pass

    def test_proxy_post_namespaced_pod_with_path(self):
        """
        Test case for proxy_post_namespaced_pod_with_path

        
        """
        pass

    def test_proxy_post_namespaced_service(self):
        """
        Test case for proxy_post_namespaced_service

        
        """
        pass

    def test_proxy_post_namespaced_service_with_path(self):
        """
        Test case for proxy_post_namespaced_service_with_path

        
        """
        pass

    def test_proxy_post_node(self):
        """
        Test case for proxy_post_node

        
        """
        pass

    def test_proxy_post_node_with_path(self):
        """
        Test case for proxy_post_node_with_path

        
        """
        pass

    def test_proxy_put_namespaced_pod(self):
        """
        Test case for proxy_put_namespaced_pod

        
        """
        pass

    def test_proxy_put_namespaced_pod_with_path(self):
        """
        Test case for proxy_put_namespaced_pod_with_path

        
        """
        pass

    def test_proxy_put_namespaced_service(self):
        """
        Test case for proxy_put_namespaced_service

        
        """
        pass

    def test_proxy_put_namespaced_service_with_path(self):
        """
        Test case for proxy_put_namespaced_service_with_path

        
        """
        pass

    def test_proxy_put_node(self):
        """
        Test case for proxy_put_node

        
        """
        pass

    def test_proxy_put_node_with_path(self):
        """
        Test case for proxy_put_node_with_path

        
        """
        pass

    def test_read_component_status(self):
        """
        Test case for read_component_status

        
        """
        pass

    def test_read_namespace(self):
        """
        Test case for read_namespace

        
        """
        pass

    def test_read_namespace_status(self):
        """
        Test case for read_namespace_status

        
        """
        pass

    def test_read_namespaced_config_map(self):
        """
        Test case for read_namespaced_config_map

        
        """
        pass

    def test_read_namespaced_endpoints(self):
        """
        Test case for read_namespaced_endpoints

        
        """
        pass

    def test_read_namespaced_event(self):
        """
        Test case for read_namespaced_event

        
        """
        pass

    def test_read_namespaced_limit_range(self):
        """
        Test case for read_namespaced_limit_range

        
        """
        pass

    def test_read_namespaced_persistent_volume_claim(self):
        """
        Test case for read_namespaced_persistent_volume_claim

        
        """
        pass

    def test_read_namespaced_persistent_volume_claim_status(self):
        """
        Test case for read_namespaced_persistent_volume_claim_status

        
        """
        pass

    def test_read_namespaced_pod(self):
        """
        Test case for read_namespaced_pod

        
        """
        pass

    def test_read_namespaced_pod_log(self):
        """
        Test case for read_namespaced_pod_log

        
        """
        pass

    def test_read_namespaced_pod_status(self):
        """
        Test case for read_namespaced_pod_status

        
        """
        pass

    def test_read_namespaced_pod_template(self):
        """
        Test case for read_namespaced_pod_template

        
        """
        pass

    def test_read_namespaced_replication_controller(self):
        """
        Test case for read_namespaced_replication_controller

        
        """
        pass

    def test_read_namespaced_replication_controller_status(self):
        """
        Test case for read_namespaced_replication_controller_status

        
        """
        pass

    def test_read_namespaced_resource_quota(self):
        """
        Test case for read_namespaced_resource_quota

        
        """
        pass

    def test_read_namespaced_resource_quota_status(self):
        """
        Test case for read_namespaced_resource_quota_status

        
        """
        pass

    def test_read_namespaced_scale_scale(self):
        """
        Test case for read_namespaced_scale_scale

        
        """
        pass

    def test_read_namespaced_secret(self):
        """
        Test case for read_namespaced_secret

        
        """
        pass

    def test_read_namespaced_service(self):
        """
        Test case for read_namespaced_service

        
        """
        pass

    def test_read_namespaced_service_account(self):
        """
        Test case for read_namespaced_service_account

        
        """
        pass

    def test_read_namespaced_service_status(self):
        """
        Test case for read_namespaced_service_status

        
        """
        pass

    def test_read_node(self):
        """
        Test case for read_node

        
        """
        pass

    def test_read_node_status(self):
        """
        Test case for read_node_status

        
        """
        pass

    def test_read_persistent_volume(self):
        """
        Test case for read_persistent_volume

        
        """
        pass

    def test_read_persistent_volume_status(self):
        """
        Test case for read_persistent_volume_status

        
        """
        pass

    def test_read_security_context_constraints(self):
        """
        Test case for read_security_context_constraints

        
        """
        pass

    def test_replace_namespace(self):
        """
        Test case for replace_namespace

        
        """
        pass

    def test_replace_namespace_finalize(self):
        """
        Test case for replace_namespace_finalize

        
        """
        pass

    def test_replace_namespace_status(self):
        """
        Test case for replace_namespace_status

        
        """
        pass

    def test_replace_namespaced_config_map(self):
        """
        Test case for replace_namespaced_config_map

        
        """
        pass

    def test_replace_namespaced_endpoints(self):
        """
        Test case for replace_namespaced_endpoints

        
        """
        pass

    def test_replace_namespaced_event(self):
        """
        Test case for replace_namespaced_event

        
        """
        pass

    def test_replace_namespaced_limit_range(self):
        """
        Test case for replace_namespaced_limit_range

        
        """
        pass

    def test_replace_namespaced_persistent_volume_claim(self):
        """
        Test case for replace_namespaced_persistent_volume_claim

        
        """
        pass

    def test_replace_namespaced_persistent_volume_claim_status(self):
        """
        Test case for replace_namespaced_persistent_volume_claim_status

        
        """
        pass

    def test_replace_namespaced_pod(self):
        """
        Test case for replace_namespaced_pod

        
        """
        pass

    def test_replace_namespaced_pod_status(self):
        """
        Test case for replace_namespaced_pod_status

        
        """
        pass

    def test_replace_namespaced_pod_template(self):
        """
        Test case for replace_namespaced_pod_template

        
        """
        pass

    def test_replace_namespaced_replication_controller(self):
        """
        Test case for replace_namespaced_replication_controller

        
        """
        pass

    def test_replace_namespaced_replication_controller_status(self):
        """
        Test case for replace_namespaced_replication_controller_status

        
        """
        pass

    def test_replace_namespaced_resource_quota(self):
        """
        Test case for replace_namespaced_resource_quota

        
        """
        pass

    def test_replace_namespaced_resource_quota_status(self):
        """
        Test case for replace_namespaced_resource_quota_status

        
        """
        pass

    def test_replace_namespaced_scale_scale(self):
        """
        Test case for replace_namespaced_scale_scale

        
        """
        pass

    def test_replace_namespaced_secret(self):
        """
        Test case for replace_namespaced_secret

        
        """
        pass

    def test_replace_namespaced_service(self):
        """
        Test case for replace_namespaced_service

        
        """
        pass

    def test_replace_namespaced_service_account(self):
        """
        Test case for replace_namespaced_service_account

        
        """
        pass

    def test_replace_namespaced_service_status(self):
        """
        Test case for replace_namespaced_service_status

        
        """
        pass

    def test_replace_node(self):
        """
        Test case for replace_node

        
        """
        pass

    def test_replace_node_status(self):
        """
        Test case for replace_node_status

        
        """
        pass

    def test_replace_persistent_volume(self):
        """
        Test case for replace_persistent_volume

        
        """
        pass

    def test_replace_persistent_volume_status(self):
        """
        Test case for replace_persistent_volume_status

        
        """
        pass

    def test_replace_security_context_constraints(self):
        """
        Test case for replace_security_context_constraints

        
        """
        pass


if __name__ == '__main__':
    unittest.main()
