# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pfs.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='pfs.proto',
  package='pfs',
  syntax='proto3',
  serialized_pb=_b('\n\tpfs.proto\x12\x03pfs\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x14\n\x04Repo\x12\x0c\n\x04name\x18\x01 \x01(\t\"-\n\x06\x43ommit\x12\x17\n\x04repo\x18\x01 \x01(\x0b\x32\t.pfs.Repo\x12\n\n\x02id\x18\x02 \x01(\t\"&\n\x07\x43ommits\x12\x1b\n\x06\x63ommit\x18\x01 \x03(\x0b\x32\x0b.pfs.Commit\"\x1c\n\x08\x42ranches\x12\x10\n\x08\x62ranches\x18\x01 \x03(\t\"1\n\x04\x46ile\x12\x1b\n\x06\x63ommit\x18\x01 \x01(\x0b\x32\x0b.pfs.Commit\x12\x0c\n\x04path\x18\x02 \x01(\t\"\x15\n\x05\x42lock\x12\x0c\n\x04hash\x18\x01 \x01(\t\"\x83\x01\n\x08RepoInfo\x12\x17\n\x04repo\x18\x01 \x01(\x0b\x32\t.pfs.Repo\x12+\n\x07\x63reated\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x12\n\nsize_bytes\x18\x03 \x01(\x04\x12\x1d\n\nprovenance\x18\x04 \x03(\x0b\x32\t.pfs.Repo\"-\n\tRepoInfos\x12 \n\trepo_info\x18\x01 \x03(\x0b\x32\r.pfs.RepoInfo\"\xb8\x02\n\nCommitInfo\x12\x1b\n\x06\x63ommit\x18\x01 \x01(\x0b\x32\x0b.pfs.Commit\x12\x0e\n\x06\x62ranch\x18\x02 \x01(\t\x12$\n\x0b\x63ommit_type\x18\x03 \x01(\x0e\x32\x0f.pfs.CommitType\x12\"\n\rparent_commit\x18\x04 \x01(\x0b\x32\x0b.pfs.Commit\x12+\n\x07started\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x66inished\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x12\n\nsize_bytes\x18\x07 \x01(\x04\x12\x11\n\tcancelled\x18\x08 \x01(\x08\x12\x10\n\x08\x61rchived\x18\t \x01(\x08\x12\x1f\n\nprovenance\x18\n \x03(\x0b\x32\x0b.pfs.Commit\"3\n\x0b\x43ommitInfos\x12$\n\x0b\x63ommit_info\x18\x01 \x03(\x0b\x32\x0f.pfs.CommitInfo\"\xca\x01\n\x08\x46ileInfo\x12\x17\n\x04\x66ile\x18\x01 \x01(\x0b\x32\t.pfs.File\x12 \n\tfile_type\x18\x02 \x01(\x0e\x32\r.pfs.FileType\x12\x12\n\nsize_bytes\x18\x03 \x01(\x04\x12,\n\x08modified\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12$\n\x0f\x63ommit_modified\x18\x05 \x01(\x0b\x32\x0b.pfs.Commit\x12\x1b\n\x08\x63hildren\x18\x06 \x03(\x0b\x32\t.pfs.File\"-\n\tFileInfos\x12 \n\tfile_info\x18\x01 \x03(\x0b\x32\r.pfs.FileInfo\")\n\tByteRange\x12\r\n\x05lower\x18\x01 \x01(\x04\x12\r\n\x05upper\x18\x02 \x01(\x04\"D\n\x08\x42lockRef\x12\x19\n\x05\x62lock\x18\x01 \x01(\x0b\x32\n.pfs.Block\x12\x1d\n\x05range\x18\x02 \x01(\x0b\x32\x0e.pfs.ByteRange\"-\n\tBlockRefs\x12 \n\tblock_ref\x18\x01 \x03(\x0b\x32\r.pfs.BlockRef\"\xda\x01\n\x06\x41ppend\x12!\n\nblock_refs\x18\x01 \x03(\x0b\x32\r.pfs.BlockRef\x12+\n\x08\x63hildren\x18\x02 \x03(\x0b\x32\x19.pfs.Append.ChildrenEntry\x12\x1d\n\x08last_ref\x18\x03 \x01(\x0b\x32\x0b.pfs.Commit\x12\x0e\n\x06\x64\x65lete\x18\x04 \x01(\x08\x12 \n\tfile_type\x18\x05 \x01(\x0e\x32\r.pfs.FileType\x1a/\n\rChildrenEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\"g\n\tBlockInfo\x12\x19\n\x05\x62lock\x18\x01 \x01(\x0b\x32\n.pfs.Block\x12+\n\x07\x63reated\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x12\n\nsize_bytes\x18\x03 \x01(\x04\"0\n\nBlockInfos\x12\"\n\nblock_info\x18\x01 \x03(\x0b\x32\x0e.pfs.BlockInfo\"_\n\x05Shard\x12\x13\n\x0b\x66ile_number\x18\x01 \x01(\x04\x12\x14\n\x0c\x66ile_modulus\x18\x02 \x01(\x04\x12\x14\n\x0c\x62lock_number\x18\x03 \x01(\x04\x12\x15\n\rblock_modulus\x18\x04 \x01(\x04\"K\n\x11\x43reateRepoRequest\x12\x17\n\x04repo\x18\x01 \x01(\x0b\x32\t.pfs.Repo\x12\x1d\n\nprovenance\x18\x02 \x03(\x0b\x32\t.pfs.Repo\"-\n\x12InspectRepoRequest\x12\x17\n\x04repo\x18\x01 \x01(\x0b\x32\t.pfs.Repo\"0\n\x0fListRepoRequest\x12\x1d\n\nprovenance\x18\x01 \x03(\x0b\x32\t.pfs.Repo\";\n\x11\x44\x65leteRepoRequest\x12\x17\n\x04repo\x18\x01 \x01(\x0b\x32\t.pfs.Repo\x12\r\n\x05\x66orce\x18\x02 \x01(\x08\"R\n\x12StartCommitRequest\x12\x1b\n\x06parent\x18\x01 \x01(\x0b\x32\x0b.pfs.Commit\x12\x1f\n\nprovenance\x18\x02 \x03(\x0b\x32\x0b.pfs.Commit\"a\n\x11\x46orkCommitRequest\x12\x1b\n\x06parent\x18\x01 \x01(\x0b\x32\x0b.pfs.Commit\x12\x0e\n\x06\x62ranch\x18\x02 \x01(\t\x12\x1f\n\nprovenance\x18\x03 \x03(\x0b\x32\x0b.pfs.Commit\"B\n\x13\x46inishCommitRequest\x12\x1b\n\x06\x63ommit\x18\x01 \x01(\x0b\x32\x0b.pfs.Commit\x12\x0e\n\x06\x63\x61ncel\x18\x02 \x01(\x08\"4\n\x14\x41rchiveCommitRequest\x12\x1c\n\x07\x63ommits\x18\x01 \x03(\x0b\x32\x0b.pfs.Commit\"3\n\x14InspectCommitRequest\x12\x1b\n\x06\x63ommit\x18\x01 \x01(\x0b\x32\x0b.pfs.Commit\"\xc8\x01\n\x11ListCommitRequest\x12\x1c\n\x07\x65xclude\x18\x01 \x03(\x0b\x32\x0b.pfs.Commit\x12\x1c\n\x07include\x18\x06 \x03(\x0b\x32\x0b.pfs.Commit\x12\x1f\n\nprovenance\x18\x02 \x03(\x0b\x32\x0b.pfs.Commit\x12$\n\x0b\x63ommit_type\x18\x03 \x01(\x0e\x32\x0f.pfs.CommitType\x12!\n\x06status\x18\x04 \x01(\x0e\x32\x11.pfs.CommitStatus\x12\r\n\x05\x62lock\x18\x05 \x01(\x08\"O\n\x11ListBranchRequest\x12\x17\n\x04repo\x18\x01 \x01(\x0b\x32\t.pfs.Repo\x12!\n\x06status\x18\x02 \x01(\x0e\x32\x11.pfs.CommitStatus\"2\n\x13\x44\x65leteCommitRequest\x12\x1b\n\x06\x63ommit\x18\x01 \x01(\x0b\x32\x0b.pfs.Commit\"M\n\x12\x46lushCommitRequest\x12\x1b\n\x06\x63ommit\x18\x01 \x03(\x0b\x32\x0b.pfs.Commit\x12\x1a\n\x07to_repo\x18\x02 \x03(\x0b\x32\t.pfs.Repo\"A\n\nDiffMethod\x12 \n\x0b\x66rom_commit\x18\x01 \x01(\x0b\x32\x0b.pfs.Commit\x12\x11\n\tfull_file\x18\x02 \x01(\x08\"\x94\x01\n\x0eGetFileRequest\x12\x17\n\x04\x66ile\x18\x01 \x01(\x0b\x32\t.pfs.File\x12\x14\n\x0coffset_bytes\x18\x02 \x01(\x03\x12\x12\n\nsize_bytes\x18\x03 \x01(\x03\x12\x19\n\x05shard\x18\x04 \x01(\x0b\x32\n.pfs.Shard\x12$\n\x0b\x64iff_method\x18\x05 \x01(\x0b\x32\x0f.pfs.DiffMethod\"\x9d\x01\n\x0ePutFileRequest\x12\x17\n\x04\x66ile\x18\x01 \x01(\x0b\x32\t.pfs.File\x12 \n\tfile_type\x18\x02 \x01(\x0e\x32\r.pfs.FileType\x12\r\n\x05value\x18\x03 \x01(\x0c\x12!\n\tdelimiter\x18\x04 \x01(\x0e\x32\x0e.pfs.Delimiter\x12\x0b\n\x03url\x18\x05 \x01(\t\x12\x11\n\trecursive\x18\x06 \x01(\x08\"n\n\x12InspectFileRequest\x12\x17\n\x04\x66ile\x18\x01 \x01(\x0b\x32\t.pfs.File\x12\x19\n\x05shard\x18\x02 \x01(\x0b\x32\n.pfs.Shard\x12$\n\x0b\x64iff_method\x18\x03 \x01(\x0b\x32\x0f.pfs.DiffMethod\"\x8c\x01\n\x0fListFileRequest\x12\x17\n\x04\x66ile\x18\x01 \x01(\x0b\x32\t.pfs.File\x12\x19\n\x05shard\x18\x02 \x01(\x0b\x32\n.pfs.Shard\x12$\n\x0b\x64iff_method\x18\x03 \x01(\x0b\x32\x0f.pfs.DiffMethod\x12\x1f\n\x04mode\x18\x04 \x01(\x0e\x32\x11.pfs.ListFileMode\",\n\x11\x44\x65leteFileRequest\x12\x17\n\x04\x66ile\x18\x01 \x01(\x0b\x32\t.pfs.File\"X\n\x13SquashCommitRequest\x12!\n\x0c\x66rom_commits\x18\x01 \x03(\x0b\x32\x0b.pfs.Commit\x12\x1e\n\tto_commit\x18\x02 \x01(\x0b\x32\x0b.pfs.Commit\"K\n\x13ReplayCommitRequest\x12!\n\x0c\x66rom_commits\x18\x01 \x03(\x0b\x32\x0b.pfs.Commit\x12\x11\n\tto_branch\x18\x02 \x01(\t\"C\n\x0fPutBlockRequest\x12\r\n\x05value\x18\x01 \x01(\x0c\x12!\n\tdelimiter\x18\x02 \x01(\x0e\x32\x0e.pfs.Delimiter\"V\n\x0fGetBlockRequest\x12\x19\n\x05\x62lock\x18\x01 \x01(\x0b\x32\n.pfs.Block\x12\x14\n\x0coffset_bytes\x18\x02 \x01(\x04\x12\x12\n\nsize_bytes\x18\x03 \x01(\x04\"/\n\x12\x44\x65leteBlockRequest\x12\x19\n\x05\x62lock\x18\x01 \x01(\x0b\x32\n.pfs.Block\"0\n\x13InspectBlockRequest\x12\x19\n\x05\x62lock\x18\x01 \x01(\x0b\x32\n.pfs.Block\"\x12\n\x10ListBlockRequest*O\n\nCommitType\x12\x14\n\x10\x43OMMIT_TYPE_NONE\x10\x00\x12\x14\n\x10\x43OMMIT_TYPE_READ\x10\x01\x12\x15\n\x11\x43OMMIT_TYPE_WRITE\x10\x02*H\n\x08\x46ileType\x12\x12\n\x0e\x46ILE_TYPE_NONE\x10\x00\x12\x15\n\x11\x46ILE_TYPE_REGULAR\x10\x01\x12\x11\n\rFILE_TYPE_DIR\x10\x02*@\n\x0c\x43ommitStatus\x12\n\n\x06NORMAL\x10\x00\x12\x0c\n\x08\x41RCHIVED\x10\x01\x12\r\n\tCANCELLED\x10\x02\x12\x07\n\x03\x41LL\x10\x03*)\n\tDelimiter\x12\x08\n\x04NONE\x10\x00\x12\x08\n\x04JSON\x10\x01\x12\x08\n\x04LINE\x10\x02*L\n\x0cListFileMode\x12\x13\n\x0fListFile_NORMAL\x10\x00\x12\x11\n\rListFile_FAST\x10\x01\x12\x14\n\x10ListFile_RECURSE\x10\x02\x32\xbf\n\n\x03\x41PI\x12>\n\nCreateRepo\x12\x16.pfs.CreateRepoRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x37\n\x0bInspectRepo\x12\x17.pfs.InspectRepoRequest\x1a\r.pfs.RepoInfo\"\x00\x12\x32\n\x08ListRepo\x12\x14.pfs.ListRepoRequest\x1a\x0e.pfs.RepoInfos\"\x00\x12>\n\nDeleteRepo\x12\x16.pfs.DeleteRepoRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x35\n\x0bStartCommit\x12\x17.pfs.StartCommitRequest\x1a\x0b.pfs.Commit\"\x00\x12\x33\n\nForkCommit\x12\x16.pfs.ForkCommitRequest\x1a\x0b.pfs.Commit\"\x00\x12\x42\n\x0c\x46inishCommit\x12\x18.pfs.FinishCommitRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x44\n\rArchiveCommit\x12\x19.pfs.ArchiveCommitRequest\x1a\x16.google.protobuf.Empty\"\x00\x12=\n\rInspectCommit\x12\x19.pfs.InspectCommitRequest\x1a\x0f.pfs.CommitInfo\"\x00\x12\x38\n\nListCommit\x12\x16.pfs.ListCommitRequest\x1a\x10.pfs.CommitInfos\"\x00\x12\x42\n\x0c\x44\x65leteCommit\x12\x18.pfs.DeleteCommitRequest\x1a\x16.google.protobuf.Empty\"\x00\x12:\n\x0b\x46lushCommit\x12\x17.pfs.FlushCommitRequest\x1a\x10.pfs.CommitInfos\"\x00\x12\x35\n\nListBranch\x12\x16.pfs.ListBranchRequest\x1a\r.pfs.Branches\"\x00\x12\x42\n\x0cSquashCommit\x12\x18.pfs.SquashCommitRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x38\n\x0cReplayCommit\x12\x18.pfs.ReplayCommitRequest\x1a\x0c.pfs.Commits\"\x00\x12:\n\x07PutFile\x12\x13.pfs.PutFileRequest\x1a\x16.google.protobuf.Empty\"\x00(\x01\x12?\n\x07GetFile\x12\x13.pfs.GetFileRequest\x1a\x1b.google.protobuf.BytesValue\"\x00\x30\x01\x12\x37\n\x0bInspectFile\x12\x17.pfs.InspectFileRequest\x1a\r.pfs.FileInfo\"\x00\x12\x32\n\x08ListFile\x12\x14.pfs.ListFileRequest\x1a\x0e.pfs.FileInfos\"\x00\x12>\n\nDeleteFile\x12\x16.pfs.DeleteFileRequest\x1a\x16.google.protobuf.Empty\"\x00\x12=\n\tDeleteAll\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00\x12>\n\nArchiveAll\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00\x32\xb8\x02\n\x08\x42lockAPI\x12\x34\n\x08PutBlock\x12\x14.pfs.PutBlockRequest\x1a\x0e.pfs.BlockRefs\"\x00(\x01\x12\x41\n\x08GetBlock\x12\x14.pfs.GetBlockRequest\x1a\x1b.google.protobuf.BytesValue\"\x00\x30\x01\x12@\n\x0b\x44\x65leteBlock\x12\x17.pfs.DeleteBlockRequest\x1a\x16.google.protobuf.Empty\"\x00\x12:\n\x0cInspectBlock\x12\x18.pfs.InspectBlockRequest\x1a\x0e.pfs.BlockInfo\"\x00\x12\x35\n\tListBlock\x12\x15.pfs.ListBlockRequest\x1a\x0f.pfs.BlockInfos\"\x00\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,google_dot_protobuf_dot_wrappers__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_COMMITTYPE = _descriptor.EnumDescriptor(
  name='CommitType',
  full_name='pfs.CommitType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COMMIT_TYPE_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMMIT_TYPE_READ', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMMIT_TYPE_WRITE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3889,
  serialized_end=3968,
)
_sym_db.RegisterEnumDescriptor(_COMMITTYPE)

CommitType = enum_type_wrapper.EnumTypeWrapper(_COMMITTYPE)
_FILETYPE = _descriptor.EnumDescriptor(
  name='FileType',
  full_name='pfs.FileType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FILE_TYPE_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_TYPE_REGULAR', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_TYPE_DIR', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3970,
  serialized_end=4042,
)
_sym_db.RegisterEnumDescriptor(_FILETYPE)

FileType = enum_type_wrapper.EnumTypeWrapper(_FILETYPE)
_COMMITSTATUS = _descriptor.EnumDescriptor(
  name='CommitStatus',
  full_name='pfs.CommitStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NORMAL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ARCHIVED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CANCELLED', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALL', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=4044,
  serialized_end=4108,
)
_sym_db.RegisterEnumDescriptor(_COMMITSTATUS)

CommitStatus = enum_type_wrapper.EnumTypeWrapper(_COMMITSTATUS)
_DELIMITER = _descriptor.EnumDescriptor(
  name='Delimiter',
  full_name='pfs.Delimiter',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JSON', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LINE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=4110,
  serialized_end=4151,
)
_sym_db.RegisterEnumDescriptor(_DELIMITER)

Delimiter = enum_type_wrapper.EnumTypeWrapper(_DELIMITER)
_LISTFILEMODE = _descriptor.EnumDescriptor(
  name='ListFileMode',
  full_name='pfs.ListFileMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ListFile_NORMAL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ListFile_FAST', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ListFile_RECURSE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=4153,
  serialized_end=4229,
)
_sym_db.RegisterEnumDescriptor(_LISTFILEMODE)

ListFileMode = enum_type_wrapper.EnumTypeWrapper(_LISTFILEMODE)
COMMIT_TYPE_NONE = 0
COMMIT_TYPE_READ = 1
COMMIT_TYPE_WRITE = 2
FILE_TYPE_NONE = 0
FILE_TYPE_REGULAR = 1
FILE_TYPE_DIR = 2
NORMAL = 0
ARCHIVED = 1
CANCELLED = 2
ALL = 3
NONE = 0
JSON = 1
LINE = 2
ListFile_NORMAL = 0
ListFile_FAST = 1
ListFile_RECURSE = 2



_REPO = _descriptor.Descriptor(
  name='Repo',
  full_name='pfs.Repo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='pfs.Repo.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=132,
)


_COMMIT = _descriptor.Descriptor(
  name='Commit',
  full_name='pfs.Commit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repo', full_name='pfs.Commit.repo', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='pfs.Commit.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=134,
  serialized_end=179,
)


_COMMITS = _descriptor.Descriptor(
  name='Commits',
  full_name='pfs.Commits',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='pfs.Commits.commit', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=181,
  serialized_end=219,
)


_BRANCHES = _descriptor.Descriptor(
  name='Branches',
  full_name='pfs.Branches',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='branches', full_name='pfs.Branches.branches', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=221,
  serialized_end=249,
)


_FILE = _descriptor.Descriptor(
  name='File',
  full_name='pfs.File',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='pfs.File.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='pfs.File.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=251,
  serialized_end=300,
)


_BLOCK = _descriptor.Descriptor(
  name='Block',
  full_name='pfs.Block',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hash', full_name='pfs.Block.hash', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=302,
  serialized_end=323,
)


_REPOINFO = _descriptor.Descriptor(
  name='RepoInfo',
  full_name='pfs.RepoInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repo', full_name='pfs.RepoInfo.repo', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='created', full_name='pfs.RepoInfo.created', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size_bytes', full_name='pfs.RepoInfo.size_bytes', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='provenance', full_name='pfs.RepoInfo.provenance', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=326,
  serialized_end=457,
)


_REPOINFOS = _descriptor.Descriptor(
  name='RepoInfos',
  full_name='pfs.RepoInfos',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repo_info', full_name='pfs.RepoInfos.repo_info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=459,
  serialized_end=504,
)


_COMMITINFO = _descriptor.Descriptor(
  name='CommitInfo',
  full_name='pfs.CommitInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='pfs.CommitInfo.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='branch', full_name='pfs.CommitInfo.branch', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='commit_type', full_name='pfs.CommitInfo.commit_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parent_commit', full_name='pfs.CommitInfo.parent_commit', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='started', full_name='pfs.CommitInfo.started', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='finished', full_name='pfs.CommitInfo.finished', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size_bytes', full_name='pfs.CommitInfo.size_bytes', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cancelled', full_name='pfs.CommitInfo.cancelled', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='archived', full_name='pfs.CommitInfo.archived', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='provenance', full_name='pfs.CommitInfo.provenance', index=9,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=507,
  serialized_end=819,
)


_COMMITINFOS = _descriptor.Descriptor(
  name='CommitInfos',
  full_name='pfs.CommitInfos',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit_info', full_name='pfs.CommitInfos.commit_info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=821,
  serialized_end=872,
)


_FILEINFO = _descriptor.Descriptor(
  name='FileInfo',
  full_name='pfs.FileInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file', full_name='pfs.FileInfo.file', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file_type', full_name='pfs.FileInfo.file_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size_bytes', full_name='pfs.FileInfo.size_bytes', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='modified', full_name='pfs.FileInfo.modified', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='commit_modified', full_name='pfs.FileInfo.commit_modified', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='children', full_name='pfs.FileInfo.children', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=875,
  serialized_end=1077,
)


_FILEINFOS = _descriptor.Descriptor(
  name='FileInfos',
  full_name='pfs.FileInfos',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file_info', full_name='pfs.FileInfos.file_info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1079,
  serialized_end=1124,
)


_BYTERANGE = _descriptor.Descriptor(
  name='ByteRange',
  full_name='pfs.ByteRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='lower', full_name='pfs.ByteRange.lower', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='upper', full_name='pfs.ByteRange.upper', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1126,
  serialized_end=1167,
)


_BLOCKREF = _descriptor.Descriptor(
  name='BlockRef',
  full_name='pfs.BlockRef',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block', full_name='pfs.BlockRef.block', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='range', full_name='pfs.BlockRef.range', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1169,
  serialized_end=1237,
)


_BLOCKREFS = _descriptor.Descriptor(
  name='BlockRefs',
  full_name='pfs.BlockRefs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block_ref', full_name='pfs.BlockRefs.block_ref', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1239,
  serialized_end=1284,
)


_APPEND_CHILDRENENTRY = _descriptor.Descriptor(
  name='ChildrenEntry',
  full_name='pfs.Append.ChildrenEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='pfs.Append.ChildrenEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='pfs.Append.ChildrenEntry.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1458,
  serialized_end=1505,
)

_APPEND = _descriptor.Descriptor(
  name='Append',
  full_name='pfs.Append',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block_refs', full_name='pfs.Append.block_refs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='children', full_name='pfs.Append.children', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_ref', full_name='pfs.Append.last_ref', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delete', full_name='pfs.Append.delete', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file_type', full_name='pfs.Append.file_type', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_APPEND_CHILDRENENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1287,
  serialized_end=1505,
)


_BLOCKINFO = _descriptor.Descriptor(
  name='BlockInfo',
  full_name='pfs.BlockInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block', full_name='pfs.BlockInfo.block', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='created', full_name='pfs.BlockInfo.created', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size_bytes', full_name='pfs.BlockInfo.size_bytes', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1507,
  serialized_end=1610,
)


_BLOCKINFOS = _descriptor.Descriptor(
  name='BlockInfos',
  full_name='pfs.BlockInfos',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block_info', full_name='pfs.BlockInfos.block_info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1612,
  serialized_end=1660,
)


_SHARD = _descriptor.Descriptor(
  name='Shard',
  full_name='pfs.Shard',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file_number', full_name='pfs.Shard.file_number', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file_modulus', full_name='pfs.Shard.file_modulus', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='block_number', full_name='pfs.Shard.block_number', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='block_modulus', full_name='pfs.Shard.block_modulus', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1662,
  serialized_end=1757,
)


_CREATEREPOREQUEST = _descriptor.Descriptor(
  name='CreateRepoRequest',
  full_name='pfs.CreateRepoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repo', full_name='pfs.CreateRepoRequest.repo', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='provenance', full_name='pfs.CreateRepoRequest.provenance', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1759,
  serialized_end=1834,
)


_INSPECTREPOREQUEST = _descriptor.Descriptor(
  name='InspectRepoRequest',
  full_name='pfs.InspectRepoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repo', full_name='pfs.InspectRepoRequest.repo', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1836,
  serialized_end=1881,
)


_LISTREPOREQUEST = _descriptor.Descriptor(
  name='ListRepoRequest',
  full_name='pfs.ListRepoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='provenance', full_name='pfs.ListRepoRequest.provenance', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1883,
  serialized_end=1931,
)


_DELETEREPOREQUEST = _descriptor.Descriptor(
  name='DeleteRepoRequest',
  full_name='pfs.DeleteRepoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repo', full_name='pfs.DeleteRepoRequest.repo', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='force', full_name='pfs.DeleteRepoRequest.force', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1933,
  serialized_end=1992,
)


_STARTCOMMITREQUEST = _descriptor.Descriptor(
  name='StartCommitRequest',
  full_name='pfs.StartCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent', full_name='pfs.StartCommitRequest.parent', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='provenance', full_name='pfs.StartCommitRequest.provenance', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1994,
  serialized_end=2076,
)


_FORKCOMMITREQUEST = _descriptor.Descriptor(
  name='ForkCommitRequest',
  full_name='pfs.ForkCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent', full_name='pfs.ForkCommitRequest.parent', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='branch', full_name='pfs.ForkCommitRequest.branch', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='provenance', full_name='pfs.ForkCommitRequest.provenance', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2078,
  serialized_end=2175,
)


_FINISHCOMMITREQUEST = _descriptor.Descriptor(
  name='FinishCommitRequest',
  full_name='pfs.FinishCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='pfs.FinishCommitRequest.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cancel', full_name='pfs.FinishCommitRequest.cancel', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2177,
  serialized_end=2243,
)


_ARCHIVECOMMITREQUEST = _descriptor.Descriptor(
  name='ArchiveCommitRequest',
  full_name='pfs.ArchiveCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commits', full_name='pfs.ArchiveCommitRequest.commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2245,
  serialized_end=2297,
)


_INSPECTCOMMITREQUEST = _descriptor.Descriptor(
  name='InspectCommitRequest',
  full_name='pfs.InspectCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='pfs.InspectCommitRequest.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2299,
  serialized_end=2350,
)


_LISTCOMMITREQUEST = _descriptor.Descriptor(
  name='ListCommitRequest',
  full_name='pfs.ListCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exclude', full_name='pfs.ListCommitRequest.exclude', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='include', full_name='pfs.ListCommitRequest.include', index=1,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='provenance', full_name='pfs.ListCommitRequest.provenance', index=2,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='commit_type', full_name='pfs.ListCommitRequest.commit_type', index=3,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='pfs.ListCommitRequest.status', index=4,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='block', full_name='pfs.ListCommitRequest.block', index=5,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2353,
  serialized_end=2553,
)


_LISTBRANCHREQUEST = _descriptor.Descriptor(
  name='ListBranchRequest',
  full_name='pfs.ListBranchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repo', full_name='pfs.ListBranchRequest.repo', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='pfs.ListBranchRequest.status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2555,
  serialized_end=2634,
)


_DELETECOMMITREQUEST = _descriptor.Descriptor(
  name='DeleteCommitRequest',
  full_name='pfs.DeleteCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='pfs.DeleteCommitRequest.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2636,
  serialized_end=2686,
)


_FLUSHCOMMITREQUEST = _descriptor.Descriptor(
  name='FlushCommitRequest',
  full_name='pfs.FlushCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='pfs.FlushCommitRequest.commit', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='to_repo', full_name='pfs.FlushCommitRequest.to_repo', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2688,
  serialized_end=2765,
)


_DIFFMETHOD = _descriptor.Descriptor(
  name='DiffMethod',
  full_name='pfs.DiffMethod',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from_commit', full_name='pfs.DiffMethod.from_commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='full_file', full_name='pfs.DiffMethod.full_file', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2767,
  serialized_end=2832,
)


_GETFILEREQUEST = _descriptor.Descriptor(
  name='GetFileRequest',
  full_name='pfs.GetFileRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file', full_name='pfs.GetFileRequest.file', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset_bytes', full_name='pfs.GetFileRequest.offset_bytes', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size_bytes', full_name='pfs.GetFileRequest.size_bytes', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shard', full_name='pfs.GetFileRequest.shard', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='diff_method', full_name='pfs.GetFileRequest.diff_method', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2835,
  serialized_end=2983,
)


_PUTFILEREQUEST = _descriptor.Descriptor(
  name='PutFileRequest',
  full_name='pfs.PutFileRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file', full_name='pfs.PutFileRequest.file', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file_type', full_name='pfs.PutFileRequest.file_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='pfs.PutFileRequest.value', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delimiter', full_name='pfs.PutFileRequest.delimiter', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='url', full_name='pfs.PutFileRequest.url', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recursive', full_name='pfs.PutFileRequest.recursive', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2986,
  serialized_end=3143,
)


_INSPECTFILEREQUEST = _descriptor.Descriptor(
  name='InspectFileRequest',
  full_name='pfs.InspectFileRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file', full_name='pfs.InspectFileRequest.file', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shard', full_name='pfs.InspectFileRequest.shard', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='diff_method', full_name='pfs.InspectFileRequest.diff_method', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3145,
  serialized_end=3255,
)


_LISTFILEREQUEST = _descriptor.Descriptor(
  name='ListFileRequest',
  full_name='pfs.ListFileRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file', full_name='pfs.ListFileRequest.file', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shard', full_name='pfs.ListFileRequest.shard', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='diff_method', full_name='pfs.ListFileRequest.diff_method', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mode', full_name='pfs.ListFileRequest.mode', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3258,
  serialized_end=3398,
)


_DELETEFILEREQUEST = _descriptor.Descriptor(
  name='DeleteFileRequest',
  full_name='pfs.DeleteFileRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file', full_name='pfs.DeleteFileRequest.file', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3400,
  serialized_end=3444,
)


_SQUASHCOMMITREQUEST = _descriptor.Descriptor(
  name='SquashCommitRequest',
  full_name='pfs.SquashCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from_commits', full_name='pfs.SquashCommitRequest.from_commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='to_commit', full_name='pfs.SquashCommitRequest.to_commit', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3446,
  serialized_end=3534,
)


_REPLAYCOMMITREQUEST = _descriptor.Descriptor(
  name='ReplayCommitRequest',
  full_name='pfs.ReplayCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from_commits', full_name='pfs.ReplayCommitRequest.from_commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='to_branch', full_name='pfs.ReplayCommitRequest.to_branch', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3536,
  serialized_end=3611,
)


_PUTBLOCKREQUEST = _descriptor.Descriptor(
  name='PutBlockRequest',
  full_name='pfs.PutBlockRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='pfs.PutBlockRequest.value', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delimiter', full_name='pfs.PutBlockRequest.delimiter', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3613,
  serialized_end=3680,
)


_GETBLOCKREQUEST = _descriptor.Descriptor(
  name='GetBlockRequest',
  full_name='pfs.GetBlockRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block', full_name='pfs.GetBlockRequest.block', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset_bytes', full_name='pfs.GetBlockRequest.offset_bytes', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size_bytes', full_name='pfs.GetBlockRequest.size_bytes', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3682,
  serialized_end=3768,
)


_DELETEBLOCKREQUEST = _descriptor.Descriptor(
  name='DeleteBlockRequest',
  full_name='pfs.DeleteBlockRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block', full_name='pfs.DeleteBlockRequest.block', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3770,
  serialized_end=3817,
)


_INSPECTBLOCKREQUEST = _descriptor.Descriptor(
  name='InspectBlockRequest',
  full_name='pfs.InspectBlockRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block', full_name='pfs.InspectBlockRequest.block', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3819,
  serialized_end=3867,
)


_LISTBLOCKREQUEST = _descriptor.Descriptor(
  name='ListBlockRequest',
  full_name='pfs.ListBlockRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3869,
  serialized_end=3887,
)

_COMMIT.fields_by_name['repo'].message_type = _REPO
_COMMITS.fields_by_name['commit'].message_type = _COMMIT
_FILE.fields_by_name['commit'].message_type = _COMMIT
_REPOINFO.fields_by_name['repo'].message_type = _REPO
_REPOINFO.fields_by_name['created'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_REPOINFO.fields_by_name['provenance'].message_type = _REPO
_REPOINFOS.fields_by_name['repo_info'].message_type = _REPOINFO
_COMMITINFO.fields_by_name['commit'].message_type = _COMMIT
_COMMITINFO.fields_by_name['commit_type'].enum_type = _COMMITTYPE
_COMMITINFO.fields_by_name['parent_commit'].message_type = _COMMIT
_COMMITINFO.fields_by_name['started'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_COMMITINFO.fields_by_name['finished'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_COMMITINFO.fields_by_name['provenance'].message_type = _COMMIT
_COMMITINFOS.fields_by_name['commit_info'].message_type = _COMMITINFO
_FILEINFO.fields_by_name['file'].message_type = _FILE
_FILEINFO.fields_by_name['file_type'].enum_type = _FILETYPE
_FILEINFO.fields_by_name['modified'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_FILEINFO.fields_by_name['commit_modified'].message_type = _COMMIT
_FILEINFO.fields_by_name['children'].message_type = _FILE
_FILEINFOS.fields_by_name['file_info'].message_type = _FILEINFO
_BLOCKREF.fields_by_name['block'].message_type = _BLOCK
_BLOCKREF.fields_by_name['range'].message_type = _BYTERANGE
_BLOCKREFS.fields_by_name['block_ref'].message_type = _BLOCKREF
_APPEND_CHILDRENENTRY.containing_type = _APPEND
_APPEND.fields_by_name['block_refs'].message_type = _BLOCKREF
_APPEND.fields_by_name['children'].message_type = _APPEND_CHILDRENENTRY
_APPEND.fields_by_name['last_ref'].message_type = _COMMIT
_APPEND.fields_by_name['file_type'].enum_type = _FILETYPE
_BLOCKINFO.fields_by_name['block'].message_type = _BLOCK
_BLOCKINFO.fields_by_name['created'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_BLOCKINFOS.fields_by_name['block_info'].message_type = _BLOCKINFO
_CREATEREPOREQUEST.fields_by_name['repo'].message_type = _REPO
_CREATEREPOREQUEST.fields_by_name['provenance'].message_type = _REPO
_INSPECTREPOREQUEST.fields_by_name['repo'].message_type = _REPO
_LISTREPOREQUEST.fields_by_name['provenance'].message_type = _REPO
_DELETEREPOREQUEST.fields_by_name['repo'].message_type = _REPO
_STARTCOMMITREQUEST.fields_by_name['parent'].message_type = _COMMIT
_STARTCOMMITREQUEST.fields_by_name['provenance'].message_type = _COMMIT
_FORKCOMMITREQUEST.fields_by_name['parent'].message_type = _COMMIT
_FORKCOMMITREQUEST.fields_by_name['provenance'].message_type = _COMMIT
_FINISHCOMMITREQUEST.fields_by_name['commit'].message_type = _COMMIT
_ARCHIVECOMMITREQUEST.fields_by_name['commits'].message_type = _COMMIT
_INSPECTCOMMITREQUEST.fields_by_name['commit'].message_type = _COMMIT
_LISTCOMMITREQUEST.fields_by_name['exclude'].message_type = _COMMIT
_LISTCOMMITREQUEST.fields_by_name['include'].message_type = _COMMIT
_LISTCOMMITREQUEST.fields_by_name['provenance'].message_type = _COMMIT
_LISTCOMMITREQUEST.fields_by_name['commit_type'].enum_type = _COMMITTYPE
_LISTCOMMITREQUEST.fields_by_name['status'].enum_type = _COMMITSTATUS
_LISTBRANCHREQUEST.fields_by_name['repo'].message_type = _REPO
_LISTBRANCHREQUEST.fields_by_name['status'].enum_type = _COMMITSTATUS
_DELETECOMMITREQUEST.fields_by_name['commit'].message_type = _COMMIT
_FLUSHCOMMITREQUEST.fields_by_name['commit'].message_type = _COMMIT
_FLUSHCOMMITREQUEST.fields_by_name['to_repo'].message_type = _REPO
_DIFFMETHOD.fields_by_name['from_commit'].message_type = _COMMIT
_GETFILEREQUEST.fields_by_name['file'].message_type = _FILE
_GETFILEREQUEST.fields_by_name['shard'].message_type = _SHARD
_GETFILEREQUEST.fields_by_name['diff_method'].message_type = _DIFFMETHOD
_PUTFILEREQUEST.fields_by_name['file'].message_type = _FILE
_PUTFILEREQUEST.fields_by_name['file_type'].enum_type = _FILETYPE
_PUTFILEREQUEST.fields_by_name['delimiter'].enum_type = _DELIMITER
_INSPECTFILEREQUEST.fields_by_name['file'].message_type = _FILE
_INSPECTFILEREQUEST.fields_by_name['shard'].message_type = _SHARD
_INSPECTFILEREQUEST.fields_by_name['diff_method'].message_type = _DIFFMETHOD
_LISTFILEREQUEST.fields_by_name['file'].message_type = _FILE
_LISTFILEREQUEST.fields_by_name['shard'].message_type = _SHARD
_LISTFILEREQUEST.fields_by_name['diff_method'].message_type = _DIFFMETHOD
_LISTFILEREQUEST.fields_by_name['mode'].enum_type = _LISTFILEMODE
_DELETEFILEREQUEST.fields_by_name['file'].message_type = _FILE
_SQUASHCOMMITREQUEST.fields_by_name['from_commits'].message_type = _COMMIT
_SQUASHCOMMITREQUEST.fields_by_name['to_commit'].message_type = _COMMIT
_REPLAYCOMMITREQUEST.fields_by_name['from_commits'].message_type = _COMMIT
_PUTBLOCKREQUEST.fields_by_name['delimiter'].enum_type = _DELIMITER
_GETBLOCKREQUEST.fields_by_name['block'].message_type = _BLOCK
_DELETEBLOCKREQUEST.fields_by_name['block'].message_type = _BLOCK
_INSPECTBLOCKREQUEST.fields_by_name['block'].message_type = _BLOCK
DESCRIPTOR.message_types_by_name['Repo'] = _REPO
DESCRIPTOR.message_types_by_name['Commit'] = _COMMIT
DESCRIPTOR.message_types_by_name['Commits'] = _COMMITS
DESCRIPTOR.message_types_by_name['Branches'] = _BRANCHES
DESCRIPTOR.message_types_by_name['File'] = _FILE
DESCRIPTOR.message_types_by_name['Block'] = _BLOCK
DESCRIPTOR.message_types_by_name['RepoInfo'] = _REPOINFO
DESCRIPTOR.message_types_by_name['RepoInfos'] = _REPOINFOS
DESCRIPTOR.message_types_by_name['CommitInfo'] = _COMMITINFO
DESCRIPTOR.message_types_by_name['CommitInfos'] = _COMMITINFOS
DESCRIPTOR.message_types_by_name['FileInfo'] = _FILEINFO
DESCRIPTOR.message_types_by_name['FileInfos'] = _FILEINFOS
DESCRIPTOR.message_types_by_name['ByteRange'] = _BYTERANGE
DESCRIPTOR.message_types_by_name['BlockRef'] = _BLOCKREF
DESCRIPTOR.message_types_by_name['BlockRefs'] = _BLOCKREFS
DESCRIPTOR.message_types_by_name['Append'] = _APPEND
DESCRIPTOR.message_types_by_name['BlockInfo'] = _BLOCKINFO
DESCRIPTOR.message_types_by_name['BlockInfos'] = _BLOCKINFOS
DESCRIPTOR.message_types_by_name['Shard'] = _SHARD
DESCRIPTOR.message_types_by_name['CreateRepoRequest'] = _CREATEREPOREQUEST
DESCRIPTOR.message_types_by_name['InspectRepoRequest'] = _INSPECTREPOREQUEST
DESCRIPTOR.message_types_by_name['ListRepoRequest'] = _LISTREPOREQUEST
DESCRIPTOR.message_types_by_name['DeleteRepoRequest'] = _DELETEREPOREQUEST
DESCRIPTOR.message_types_by_name['StartCommitRequest'] = _STARTCOMMITREQUEST
DESCRIPTOR.message_types_by_name['ForkCommitRequest'] = _FORKCOMMITREQUEST
DESCRIPTOR.message_types_by_name['FinishCommitRequest'] = _FINISHCOMMITREQUEST
DESCRIPTOR.message_types_by_name['ArchiveCommitRequest'] = _ARCHIVECOMMITREQUEST
DESCRIPTOR.message_types_by_name['InspectCommitRequest'] = _INSPECTCOMMITREQUEST
DESCRIPTOR.message_types_by_name['ListCommitRequest'] = _LISTCOMMITREQUEST
DESCRIPTOR.message_types_by_name['ListBranchRequest'] = _LISTBRANCHREQUEST
DESCRIPTOR.message_types_by_name['DeleteCommitRequest'] = _DELETECOMMITREQUEST
DESCRIPTOR.message_types_by_name['FlushCommitRequest'] = _FLUSHCOMMITREQUEST
DESCRIPTOR.message_types_by_name['DiffMethod'] = _DIFFMETHOD
DESCRIPTOR.message_types_by_name['GetFileRequest'] = _GETFILEREQUEST
DESCRIPTOR.message_types_by_name['PutFileRequest'] = _PUTFILEREQUEST
DESCRIPTOR.message_types_by_name['InspectFileRequest'] = _INSPECTFILEREQUEST
DESCRIPTOR.message_types_by_name['ListFileRequest'] = _LISTFILEREQUEST
DESCRIPTOR.message_types_by_name['DeleteFileRequest'] = _DELETEFILEREQUEST
DESCRIPTOR.message_types_by_name['SquashCommitRequest'] = _SQUASHCOMMITREQUEST
DESCRIPTOR.message_types_by_name['ReplayCommitRequest'] = _REPLAYCOMMITREQUEST
DESCRIPTOR.message_types_by_name['PutBlockRequest'] = _PUTBLOCKREQUEST
DESCRIPTOR.message_types_by_name['GetBlockRequest'] = _GETBLOCKREQUEST
DESCRIPTOR.message_types_by_name['DeleteBlockRequest'] = _DELETEBLOCKREQUEST
DESCRIPTOR.message_types_by_name['InspectBlockRequest'] = _INSPECTBLOCKREQUEST
DESCRIPTOR.message_types_by_name['ListBlockRequest'] = _LISTBLOCKREQUEST
DESCRIPTOR.enum_types_by_name['CommitType'] = _COMMITTYPE
DESCRIPTOR.enum_types_by_name['FileType'] = _FILETYPE
DESCRIPTOR.enum_types_by_name['CommitStatus'] = _COMMITSTATUS
DESCRIPTOR.enum_types_by_name['Delimiter'] = _DELIMITER
DESCRIPTOR.enum_types_by_name['ListFileMode'] = _LISTFILEMODE

Repo = _reflection.GeneratedProtocolMessageType('Repo', (_message.Message,), dict(
  DESCRIPTOR = _REPO,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.Repo)
  ))
_sym_db.RegisterMessage(Repo)

Commit = _reflection.GeneratedProtocolMessageType('Commit', (_message.Message,), dict(
  DESCRIPTOR = _COMMIT,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.Commit)
  ))
_sym_db.RegisterMessage(Commit)

Commits = _reflection.GeneratedProtocolMessageType('Commits', (_message.Message,), dict(
  DESCRIPTOR = _COMMITS,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.Commits)
  ))
_sym_db.RegisterMessage(Commits)

Branches = _reflection.GeneratedProtocolMessageType('Branches', (_message.Message,), dict(
  DESCRIPTOR = _BRANCHES,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.Branches)
  ))
_sym_db.RegisterMessage(Branches)

File = _reflection.GeneratedProtocolMessageType('File', (_message.Message,), dict(
  DESCRIPTOR = _FILE,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.File)
  ))
_sym_db.RegisterMessage(File)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), dict(
  DESCRIPTOR = _BLOCK,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.Block)
  ))
_sym_db.RegisterMessage(Block)

RepoInfo = _reflection.GeneratedProtocolMessageType('RepoInfo', (_message.Message,), dict(
  DESCRIPTOR = _REPOINFO,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.RepoInfo)
  ))
_sym_db.RegisterMessage(RepoInfo)

RepoInfos = _reflection.GeneratedProtocolMessageType('RepoInfos', (_message.Message,), dict(
  DESCRIPTOR = _REPOINFOS,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.RepoInfos)
  ))
_sym_db.RegisterMessage(RepoInfos)

CommitInfo = _reflection.GeneratedProtocolMessageType('CommitInfo', (_message.Message,), dict(
  DESCRIPTOR = _COMMITINFO,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.CommitInfo)
  ))
_sym_db.RegisterMessage(CommitInfo)

CommitInfos = _reflection.GeneratedProtocolMessageType('CommitInfos', (_message.Message,), dict(
  DESCRIPTOR = _COMMITINFOS,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.CommitInfos)
  ))
_sym_db.RegisterMessage(CommitInfos)

FileInfo = _reflection.GeneratedProtocolMessageType('FileInfo', (_message.Message,), dict(
  DESCRIPTOR = _FILEINFO,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.FileInfo)
  ))
_sym_db.RegisterMessage(FileInfo)

FileInfos = _reflection.GeneratedProtocolMessageType('FileInfos', (_message.Message,), dict(
  DESCRIPTOR = _FILEINFOS,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.FileInfos)
  ))
_sym_db.RegisterMessage(FileInfos)

ByteRange = _reflection.GeneratedProtocolMessageType('ByteRange', (_message.Message,), dict(
  DESCRIPTOR = _BYTERANGE,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.ByteRange)
  ))
_sym_db.RegisterMessage(ByteRange)

BlockRef = _reflection.GeneratedProtocolMessageType('BlockRef', (_message.Message,), dict(
  DESCRIPTOR = _BLOCKREF,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.BlockRef)
  ))
_sym_db.RegisterMessage(BlockRef)

BlockRefs = _reflection.GeneratedProtocolMessageType('BlockRefs', (_message.Message,), dict(
  DESCRIPTOR = _BLOCKREFS,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.BlockRefs)
  ))
_sym_db.RegisterMessage(BlockRefs)

Append = _reflection.GeneratedProtocolMessageType('Append', (_message.Message,), dict(

  ChildrenEntry = _reflection.GeneratedProtocolMessageType('ChildrenEntry', (_message.Message,), dict(
    DESCRIPTOR = _APPEND_CHILDRENENTRY,
    __module__ = 'pfs_pb2'
    # @@protoc_insertion_point(class_scope:pfs.Append.ChildrenEntry)
    ))
  ,
  DESCRIPTOR = _APPEND,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.Append)
  ))
_sym_db.RegisterMessage(Append)
_sym_db.RegisterMessage(Append.ChildrenEntry)

BlockInfo = _reflection.GeneratedProtocolMessageType('BlockInfo', (_message.Message,), dict(
  DESCRIPTOR = _BLOCKINFO,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.BlockInfo)
  ))
_sym_db.RegisterMessage(BlockInfo)

BlockInfos = _reflection.GeneratedProtocolMessageType('BlockInfos', (_message.Message,), dict(
  DESCRIPTOR = _BLOCKINFOS,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.BlockInfos)
  ))
_sym_db.RegisterMessage(BlockInfos)

Shard = _reflection.GeneratedProtocolMessageType('Shard', (_message.Message,), dict(
  DESCRIPTOR = _SHARD,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.Shard)
  ))
_sym_db.RegisterMessage(Shard)

CreateRepoRequest = _reflection.GeneratedProtocolMessageType('CreateRepoRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEREPOREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.CreateRepoRequest)
  ))
_sym_db.RegisterMessage(CreateRepoRequest)

InspectRepoRequest = _reflection.GeneratedProtocolMessageType('InspectRepoRequest', (_message.Message,), dict(
  DESCRIPTOR = _INSPECTREPOREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.InspectRepoRequest)
  ))
_sym_db.RegisterMessage(InspectRepoRequest)

ListRepoRequest = _reflection.GeneratedProtocolMessageType('ListRepoRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTREPOREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.ListRepoRequest)
  ))
_sym_db.RegisterMessage(ListRepoRequest)

DeleteRepoRequest = _reflection.GeneratedProtocolMessageType('DeleteRepoRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEREPOREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.DeleteRepoRequest)
  ))
_sym_db.RegisterMessage(DeleteRepoRequest)

StartCommitRequest = _reflection.GeneratedProtocolMessageType('StartCommitRequest', (_message.Message,), dict(
  DESCRIPTOR = _STARTCOMMITREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.StartCommitRequest)
  ))
_sym_db.RegisterMessage(StartCommitRequest)

ForkCommitRequest = _reflection.GeneratedProtocolMessageType('ForkCommitRequest', (_message.Message,), dict(
  DESCRIPTOR = _FORKCOMMITREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.ForkCommitRequest)
  ))
_sym_db.RegisterMessage(ForkCommitRequest)

FinishCommitRequest = _reflection.GeneratedProtocolMessageType('FinishCommitRequest', (_message.Message,), dict(
  DESCRIPTOR = _FINISHCOMMITREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.FinishCommitRequest)
  ))
_sym_db.RegisterMessage(FinishCommitRequest)

ArchiveCommitRequest = _reflection.GeneratedProtocolMessageType('ArchiveCommitRequest', (_message.Message,), dict(
  DESCRIPTOR = _ARCHIVECOMMITREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.ArchiveCommitRequest)
  ))
_sym_db.RegisterMessage(ArchiveCommitRequest)

InspectCommitRequest = _reflection.GeneratedProtocolMessageType('InspectCommitRequest', (_message.Message,), dict(
  DESCRIPTOR = _INSPECTCOMMITREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.InspectCommitRequest)
  ))
_sym_db.RegisterMessage(InspectCommitRequest)

ListCommitRequest = _reflection.GeneratedProtocolMessageType('ListCommitRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTCOMMITREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.ListCommitRequest)
  ))
_sym_db.RegisterMessage(ListCommitRequest)

ListBranchRequest = _reflection.GeneratedProtocolMessageType('ListBranchRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTBRANCHREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.ListBranchRequest)
  ))
_sym_db.RegisterMessage(ListBranchRequest)

DeleteCommitRequest = _reflection.GeneratedProtocolMessageType('DeleteCommitRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETECOMMITREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.DeleteCommitRequest)
  ))
_sym_db.RegisterMessage(DeleteCommitRequest)

FlushCommitRequest = _reflection.GeneratedProtocolMessageType('FlushCommitRequest', (_message.Message,), dict(
  DESCRIPTOR = _FLUSHCOMMITREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.FlushCommitRequest)
  ))
_sym_db.RegisterMessage(FlushCommitRequest)

DiffMethod = _reflection.GeneratedProtocolMessageType('DiffMethod', (_message.Message,), dict(
  DESCRIPTOR = _DIFFMETHOD,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.DiffMethod)
  ))
_sym_db.RegisterMessage(DiffMethod)

GetFileRequest = _reflection.GeneratedProtocolMessageType('GetFileRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETFILEREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.GetFileRequest)
  ))
_sym_db.RegisterMessage(GetFileRequest)

PutFileRequest = _reflection.GeneratedProtocolMessageType('PutFileRequest', (_message.Message,), dict(
  DESCRIPTOR = _PUTFILEREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.PutFileRequest)
  ))
_sym_db.RegisterMessage(PutFileRequest)

InspectFileRequest = _reflection.GeneratedProtocolMessageType('InspectFileRequest', (_message.Message,), dict(
  DESCRIPTOR = _INSPECTFILEREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.InspectFileRequest)
  ))
_sym_db.RegisterMessage(InspectFileRequest)

ListFileRequest = _reflection.GeneratedProtocolMessageType('ListFileRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTFILEREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.ListFileRequest)
  ))
_sym_db.RegisterMessage(ListFileRequest)

DeleteFileRequest = _reflection.GeneratedProtocolMessageType('DeleteFileRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEFILEREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.DeleteFileRequest)
  ))
_sym_db.RegisterMessage(DeleteFileRequest)

SquashCommitRequest = _reflection.GeneratedProtocolMessageType('SquashCommitRequest', (_message.Message,), dict(
  DESCRIPTOR = _SQUASHCOMMITREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.SquashCommitRequest)
  ))
_sym_db.RegisterMessage(SquashCommitRequest)

ReplayCommitRequest = _reflection.GeneratedProtocolMessageType('ReplayCommitRequest', (_message.Message,), dict(
  DESCRIPTOR = _REPLAYCOMMITREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.ReplayCommitRequest)
  ))
_sym_db.RegisterMessage(ReplayCommitRequest)

PutBlockRequest = _reflection.GeneratedProtocolMessageType('PutBlockRequest', (_message.Message,), dict(
  DESCRIPTOR = _PUTBLOCKREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.PutBlockRequest)
  ))
_sym_db.RegisterMessage(PutBlockRequest)

GetBlockRequest = _reflection.GeneratedProtocolMessageType('GetBlockRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETBLOCKREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.GetBlockRequest)
  ))
_sym_db.RegisterMessage(GetBlockRequest)

DeleteBlockRequest = _reflection.GeneratedProtocolMessageType('DeleteBlockRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEBLOCKREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.DeleteBlockRequest)
  ))
_sym_db.RegisterMessage(DeleteBlockRequest)

InspectBlockRequest = _reflection.GeneratedProtocolMessageType('InspectBlockRequest', (_message.Message,), dict(
  DESCRIPTOR = _INSPECTBLOCKREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.InspectBlockRequest)
  ))
_sym_db.RegisterMessage(InspectBlockRequest)

ListBlockRequest = _reflection.GeneratedProtocolMessageType('ListBlockRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTBLOCKREQUEST,
  __module__ = 'pfs_pb2'
  # @@protoc_insertion_point(class_scope:pfs.ListBlockRequest)
  ))
_sym_db.RegisterMessage(ListBlockRequest)


_APPEND_CHILDRENENTRY.has_options = True
_APPEND_CHILDRENENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class APIStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CreateRepo = channel.unary_unary(
          '/pfs.API/CreateRepo',
          request_serializer=CreateRepoRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.InspectRepo = channel.unary_unary(
          '/pfs.API/InspectRepo',
          request_serializer=InspectRepoRequest.SerializeToString,
          response_deserializer=RepoInfo.FromString,
          )
      self.ListRepo = channel.unary_unary(
          '/pfs.API/ListRepo',
          request_serializer=ListRepoRequest.SerializeToString,
          response_deserializer=RepoInfos.FromString,
          )
      self.DeleteRepo = channel.unary_unary(
          '/pfs.API/DeleteRepo',
          request_serializer=DeleteRepoRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.StartCommit = channel.unary_unary(
          '/pfs.API/StartCommit',
          request_serializer=StartCommitRequest.SerializeToString,
          response_deserializer=Commit.FromString,
          )
      self.ForkCommit = channel.unary_unary(
          '/pfs.API/ForkCommit',
          request_serializer=ForkCommitRequest.SerializeToString,
          response_deserializer=Commit.FromString,
          )
      self.FinishCommit = channel.unary_unary(
          '/pfs.API/FinishCommit',
          request_serializer=FinishCommitRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.ArchiveCommit = channel.unary_unary(
          '/pfs.API/ArchiveCommit',
          request_serializer=ArchiveCommitRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.InspectCommit = channel.unary_unary(
          '/pfs.API/InspectCommit',
          request_serializer=InspectCommitRequest.SerializeToString,
          response_deserializer=CommitInfo.FromString,
          )
      self.ListCommit = channel.unary_unary(
          '/pfs.API/ListCommit',
          request_serializer=ListCommitRequest.SerializeToString,
          response_deserializer=CommitInfos.FromString,
          )
      self.DeleteCommit = channel.unary_unary(
          '/pfs.API/DeleteCommit',
          request_serializer=DeleteCommitRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.FlushCommit = channel.unary_unary(
          '/pfs.API/FlushCommit',
          request_serializer=FlushCommitRequest.SerializeToString,
          response_deserializer=CommitInfos.FromString,
          )
      self.ListBranch = channel.unary_unary(
          '/pfs.API/ListBranch',
          request_serializer=ListBranchRequest.SerializeToString,
          response_deserializer=Branches.FromString,
          )
      self.SquashCommit = channel.unary_unary(
          '/pfs.API/SquashCommit',
          request_serializer=SquashCommitRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.ReplayCommit = channel.unary_unary(
          '/pfs.API/ReplayCommit',
          request_serializer=ReplayCommitRequest.SerializeToString,
          response_deserializer=Commits.FromString,
          )
      self.PutFile = channel.stream_unary(
          '/pfs.API/PutFile',
          request_serializer=PutFileRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.GetFile = channel.unary_stream(
          '/pfs.API/GetFile',
          request_serializer=GetFileRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
          )
      self.InspectFile = channel.unary_unary(
          '/pfs.API/InspectFile',
          request_serializer=InspectFileRequest.SerializeToString,
          response_deserializer=FileInfo.FromString,
          )
      self.ListFile = channel.unary_unary(
          '/pfs.API/ListFile',
          request_serializer=ListFileRequest.SerializeToString,
          response_deserializer=FileInfos.FromString,
          )
      self.DeleteFile = channel.unary_unary(
          '/pfs.API/DeleteFile',
          request_serializer=DeleteFileRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.DeleteAll = channel.unary_unary(
          '/pfs.API/DeleteAll',
          request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.ArchiveAll = channel.unary_unary(
          '/pfs.API/ArchiveAll',
          request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )


  class APIServicer(object):

    def CreateRepo(self, request, context):
      """Repo rpcs
      CreateRepo creates a new repo.
      An error is returned if the repo already exists.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def InspectRepo(self, request, context):
      """InspectRepo returns info about a repo.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListRepo(self, request, context):
      """ListRepo returns info about all repos.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteRepo(self, request, context):
      """DeleteRepo deletes a repo.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def StartCommit(self, request, context):
      """Commit rpcs
      StartCommit creates a new write commit from a parent commit.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ForkCommit(self, request, context):
      """Fork creates a commit on a new branch.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def FinishCommit(self, request, context):
      """FinishCommit turns a write commit into a read commit.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ArchiveCommit(self, request, context):
      """ArchiveCommit marks commits as archived, it will be excluded from ListCommit.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def InspectCommit(self, request, context):
      """InspectCommit returns the info about a commit.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListCommit(self, request, context):
      """ListCommit returns info about all commits.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteCommit(self, request, context):
      """DeleteCommit deletes a commit.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def FlushCommit(self, request, context):
      """FlushCommit waits for downstream commits to finish
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListBranch(self, request, context):
      """ListBranch returns info about the heads of branches.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SquashCommit(self, request, context):
      """Squash returns the head of the commit of the merge
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ReplayCommit(self, request, context):
      """Replay returns the head of the commit of the merge
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def PutFile(self, request_iterator, context):
      """File rpcs
      PutFile writes the specified file to pfs.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetFile(self, request, context):
      """GetFile returns a byte stream of the contents of the file.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def InspectFile(self, request, context):
      """InspectFile returns info about a file.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListFile(self, request, context):
      """ListFile returns info about all files.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteFile(self, request, context):
      """DeleteFile deletes a file.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteAll(self, request, context):
      """DeleteAll deletes everything
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ArchiveAll(self, request, context):
      """ArchiveAll archives everything
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_APIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateRepo': grpc.unary_unary_rpc_method_handler(
            servicer.CreateRepo,
            request_deserializer=CreateRepoRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'InspectRepo': grpc.unary_unary_rpc_method_handler(
            servicer.InspectRepo,
            request_deserializer=InspectRepoRequest.FromString,
            response_serializer=RepoInfo.SerializeToString,
        ),
        'ListRepo': grpc.unary_unary_rpc_method_handler(
            servicer.ListRepo,
            request_deserializer=ListRepoRequest.FromString,
            response_serializer=RepoInfos.SerializeToString,
        ),
        'DeleteRepo': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteRepo,
            request_deserializer=DeleteRepoRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'StartCommit': grpc.unary_unary_rpc_method_handler(
            servicer.StartCommit,
            request_deserializer=StartCommitRequest.FromString,
            response_serializer=Commit.SerializeToString,
        ),
        'ForkCommit': grpc.unary_unary_rpc_method_handler(
            servicer.ForkCommit,
            request_deserializer=ForkCommitRequest.FromString,
            response_serializer=Commit.SerializeToString,
        ),
        'FinishCommit': grpc.unary_unary_rpc_method_handler(
            servicer.FinishCommit,
            request_deserializer=FinishCommitRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'ArchiveCommit': grpc.unary_unary_rpc_method_handler(
            servicer.ArchiveCommit,
            request_deserializer=ArchiveCommitRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'InspectCommit': grpc.unary_unary_rpc_method_handler(
            servicer.InspectCommit,
            request_deserializer=InspectCommitRequest.FromString,
            response_serializer=CommitInfo.SerializeToString,
        ),
        'ListCommit': grpc.unary_unary_rpc_method_handler(
            servicer.ListCommit,
            request_deserializer=ListCommitRequest.FromString,
            response_serializer=CommitInfos.SerializeToString,
        ),
        'DeleteCommit': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteCommit,
            request_deserializer=DeleteCommitRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'FlushCommit': grpc.unary_unary_rpc_method_handler(
            servicer.FlushCommit,
            request_deserializer=FlushCommitRequest.FromString,
            response_serializer=CommitInfos.SerializeToString,
        ),
        'ListBranch': grpc.unary_unary_rpc_method_handler(
            servicer.ListBranch,
            request_deserializer=ListBranchRequest.FromString,
            response_serializer=Branches.SerializeToString,
        ),
        'SquashCommit': grpc.unary_unary_rpc_method_handler(
            servicer.SquashCommit,
            request_deserializer=SquashCommitRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'ReplayCommit': grpc.unary_unary_rpc_method_handler(
            servicer.ReplayCommit,
            request_deserializer=ReplayCommitRequest.FromString,
            response_serializer=Commits.SerializeToString,
        ),
        'PutFile': grpc.stream_unary_rpc_method_handler(
            servicer.PutFile,
            request_deserializer=PutFileRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'GetFile': grpc.unary_stream_rpc_method_handler(
            servicer.GetFile,
            request_deserializer=GetFileRequest.FromString,
            response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
        ),
        'InspectFile': grpc.unary_unary_rpc_method_handler(
            servicer.InspectFile,
            request_deserializer=InspectFileRequest.FromString,
            response_serializer=FileInfo.SerializeToString,
        ),
        'ListFile': grpc.unary_unary_rpc_method_handler(
            servicer.ListFile,
            request_deserializer=ListFileRequest.FromString,
            response_serializer=FileInfos.SerializeToString,
        ),
        'DeleteFile': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteFile,
            request_deserializer=DeleteFileRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'DeleteAll': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteAll,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'ArchiveAll': grpc.unary_unary_rpc_method_handler(
            servicer.ArchiveAll,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'pfs.API', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BlockAPIStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.PutBlock = channel.stream_unary(
          '/pfs.BlockAPI/PutBlock',
          request_serializer=PutBlockRequest.SerializeToString,
          response_deserializer=BlockRefs.FromString,
          )
      self.GetBlock = channel.unary_stream(
          '/pfs.BlockAPI/GetBlock',
          request_serializer=GetBlockRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
          )
      self.DeleteBlock = channel.unary_unary(
          '/pfs.BlockAPI/DeleteBlock',
          request_serializer=DeleteBlockRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.InspectBlock = channel.unary_unary(
          '/pfs.BlockAPI/InspectBlock',
          request_serializer=InspectBlockRequest.SerializeToString,
          response_deserializer=BlockInfo.FromString,
          )
      self.ListBlock = channel.unary_unary(
          '/pfs.BlockAPI/ListBlock',
          request_serializer=ListBlockRequest.SerializeToString,
          response_deserializer=BlockInfos.FromString,
          )


  class BlockAPIServicer(object):

    def PutBlock(self, request_iterator, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetBlock(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteBlock(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def InspectBlock(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListBlock(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_BlockAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'PutBlock': grpc.stream_unary_rpc_method_handler(
            servicer.PutBlock,
            request_deserializer=PutBlockRequest.FromString,
            response_serializer=BlockRefs.SerializeToString,
        ),
        'GetBlock': grpc.unary_stream_rpc_method_handler(
            servicer.GetBlock,
            request_deserializer=GetBlockRequest.FromString,
            response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
        ),
        'DeleteBlock': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteBlock,
            request_deserializer=DeleteBlockRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'InspectBlock': grpc.unary_unary_rpc_method_handler(
            servicer.InspectBlock,
            request_deserializer=InspectBlockRequest.FromString,
            response_serializer=BlockInfo.SerializeToString,
        ),
        'ListBlock': grpc.unary_unary_rpc_method_handler(
            servicer.ListBlock,
            request_deserializer=ListBlockRequest.FromString,
            response_serializer=BlockInfos.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'pfs.BlockAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaAPIServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def CreateRepo(self, request, context):
      """Repo rpcs
      CreateRepo creates a new repo.
      An error is returned if the repo already exists.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def InspectRepo(self, request, context):
      """InspectRepo returns info about a repo.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListRepo(self, request, context):
      """ListRepo returns info about all repos.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteRepo(self, request, context):
      """DeleteRepo deletes a repo.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def StartCommit(self, request, context):
      """Commit rpcs
      StartCommit creates a new write commit from a parent commit.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ForkCommit(self, request, context):
      """Fork creates a commit on a new branch.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def FinishCommit(self, request, context):
      """FinishCommit turns a write commit into a read commit.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ArchiveCommit(self, request, context):
      """ArchiveCommit marks commits as archived, it will be excluded from ListCommit.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def InspectCommit(self, request, context):
      """InspectCommit returns the info about a commit.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListCommit(self, request, context):
      """ListCommit returns info about all commits.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteCommit(self, request, context):
      """DeleteCommit deletes a commit.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def FlushCommit(self, request, context):
      """FlushCommit waits for downstream commits to finish
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListBranch(self, request, context):
      """ListBranch returns info about the heads of branches.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SquashCommit(self, request, context):
      """Squash returns the head of the commit of the merge
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ReplayCommit(self, request, context):
      """Replay returns the head of the commit of the merge
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def PutFile(self, request_iterator, context):
      """File rpcs
      PutFile writes the specified file to pfs.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetFile(self, request, context):
      """GetFile returns a byte stream of the contents of the file.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def InspectFile(self, request, context):
      """InspectFile returns info about a file.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListFile(self, request, context):
      """ListFile returns info about all files.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteFile(self, request, context):
      """DeleteFile deletes a file.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteAll(self, request, context):
      """DeleteAll deletes everything
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ArchiveAll(self, request, context):
      """ArchiveAll archives everything
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAPIStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def CreateRepo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Repo rpcs
      CreateRepo creates a new repo.
      An error is returned if the repo already exists.
      """
      raise NotImplementedError()
    CreateRepo.future = None
    def InspectRepo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """InspectRepo returns info about a repo.
      """
      raise NotImplementedError()
    InspectRepo.future = None
    def ListRepo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """ListRepo returns info about all repos.
      """
      raise NotImplementedError()
    ListRepo.future = None
    def DeleteRepo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """DeleteRepo deletes a repo.
      """
      raise NotImplementedError()
    DeleteRepo.future = None
    def StartCommit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Commit rpcs
      StartCommit creates a new write commit from a parent commit.
      """
      raise NotImplementedError()
    StartCommit.future = None
    def ForkCommit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Fork creates a commit on a new branch.
      """
      raise NotImplementedError()
    ForkCommit.future = None
    def FinishCommit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """FinishCommit turns a write commit into a read commit.
      """
      raise NotImplementedError()
    FinishCommit.future = None
    def ArchiveCommit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """ArchiveCommit marks commits as archived, it will be excluded from ListCommit.
      """
      raise NotImplementedError()
    ArchiveCommit.future = None
    def InspectCommit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """InspectCommit returns the info about a commit.
      """
      raise NotImplementedError()
    InspectCommit.future = None
    def ListCommit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """ListCommit returns info about all commits.
      """
      raise NotImplementedError()
    ListCommit.future = None
    def DeleteCommit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """DeleteCommit deletes a commit.
      """
      raise NotImplementedError()
    DeleteCommit.future = None
    def FlushCommit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """FlushCommit waits for downstream commits to finish
      """
      raise NotImplementedError()
    FlushCommit.future = None
    def ListBranch(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """ListBranch returns info about the heads of branches.
      """
      raise NotImplementedError()
    ListBranch.future = None
    def SquashCommit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Squash returns the head of the commit of the merge
      """
      raise NotImplementedError()
    SquashCommit.future = None
    def ReplayCommit(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Replay returns the head of the commit of the merge
      """
      raise NotImplementedError()
    ReplayCommit.future = None
    def PutFile(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      """File rpcs
      PutFile writes the specified file to pfs.
      """
      raise NotImplementedError()
    PutFile.future = None
    def GetFile(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """GetFile returns a byte stream of the contents of the file.
      """
      raise NotImplementedError()
    def InspectFile(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """InspectFile returns info about a file.
      """
      raise NotImplementedError()
    InspectFile.future = None
    def ListFile(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """ListFile returns info about all files.
      """
      raise NotImplementedError()
    ListFile.future = None
    def DeleteFile(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """DeleteFile deletes a file.
      """
      raise NotImplementedError()
    DeleteFile.future = None
    def DeleteAll(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """DeleteAll deletes everything
      """
      raise NotImplementedError()
    DeleteAll.future = None
    def ArchiveAll(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """ArchiveAll archives everything
      """
      raise NotImplementedError()
    ArchiveAll.future = None


  def beta_create_API_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('pfs.API', 'ArchiveAll'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'ArchiveCommit'): ArchiveCommitRequest.FromString,
      ('pfs.API', 'CreateRepo'): CreateRepoRequest.FromString,
      ('pfs.API', 'DeleteAll'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'DeleteCommit'): DeleteCommitRequest.FromString,
      ('pfs.API', 'DeleteFile'): DeleteFileRequest.FromString,
      ('pfs.API', 'DeleteRepo'): DeleteRepoRequest.FromString,
      ('pfs.API', 'FinishCommit'): FinishCommitRequest.FromString,
      ('pfs.API', 'FlushCommit'): FlushCommitRequest.FromString,
      ('pfs.API', 'ForkCommit'): ForkCommitRequest.FromString,
      ('pfs.API', 'GetFile'): GetFileRequest.FromString,
      ('pfs.API', 'InspectCommit'): InspectCommitRequest.FromString,
      ('pfs.API', 'InspectFile'): InspectFileRequest.FromString,
      ('pfs.API', 'InspectRepo'): InspectRepoRequest.FromString,
      ('pfs.API', 'ListBranch'): ListBranchRequest.FromString,
      ('pfs.API', 'ListCommit'): ListCommitRequest.FromString,
      ('pfs.API', 'ListFile'): ListFileRequest.FromString,
      ('pfs.API', 'ListRepo'): ListRepoRequest.FromString,
      ('pfs.API', 'PutFile'): PutFileRequest.FromString,
      ('pfs.API', 'ReplayCommit'): ReplayCommitRequest.FromString,
      ('pfs.API', 'SquashCommit'): SquashCommitRequest.FromString,
      ('pfs.API', 'StartCommit'): StartCommitRequest.FromString,
    }
    response_serializers = {
      ('pfs.API', 'ArchiveAll'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'ArchiveCommit'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'CreateRepo'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'DeleteAll'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'DeleteCommit'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'DeleteFile'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'DeleteRepo'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'FinishCommit'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'FlushCommit'): CommitInfos.SerializeToString,
      ('pfs.API', 'ForkCommit'): Commit.SerializeToString,
      ('pfs.API', 'GetFile'): google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
      ('pfs.API', 'InspectCommit'): CommitInfo.SerializeToString,
      ('pfs.API', 'InspectFile'): FileInfo.SerializeToString,
      ('pfs.API', 'InspectRepo'): RepoInfo.SerializeToString,
      ('pfs.API', 'ListBranch'): Branches.SerializeToString,
      ('pfs.API', 'ListCommit'): CommitInfos.SerializeToString,
      ('pfs.API', 'ListFile'): FileInfos.SerializeToString,
      ('pfs.API', 'ListRepo'): RepoInfos.SerializeToString,
      ('pfs.API', 'PutFile'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'ReplayCommit'): Commits.SerializeToString,
      ('pfs.API', 'SquashCommit'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'StartCommit'): Commit.SerializeToString,
    }
    method_implementations = {
      ('pfs.API', 'ArchiveAll'): face_utilities.unary_unary_inline(servicer.ArchiveAll),
      ('pfs.API', 'ArchiveCommit'): face_utilities.unary_unary_inline(servicer.ArchiveCommit),
      ('pfs.API', 'CreateRepo'): face_utilities.unary_unary_inline(servicer.CreateRepo),
      ('pfs.API', 'DeleteAll'): face_utilities.unary_unary_inline(servicer.DeleteAll),
      ('pfs.API', 'DeleteCommit'): face_utilities.unary_unary_inline(servicer.DeleteCommit),
      ('pfs.API', 'DeleteFile'): face_utilities.unary_unary_inline(servicer.DeleteFile),
      ('pfs.API', 'DeleteRepo'): face_utilities.unary_unary_inline(servicer.DeleteRepo),
      ('pfs.API', 'FinishCommit'): face_utilities.unary_unary_inline(servicer.FinishCommit),
      ('pfs.API', 'FlushCommit'): face_utilities.unary_unary_inline(servicer.FlushCommit),
      ('pfs.API', 'ForkCommit'): face_utilities.unary_unary_inline(servicer.ForkCommit),
      ('pfs.API', 'GetFile'): face_utilities.unary_stream_inline(servicer.GetFile),
      ('pfs.API', 'InspectCommit'): face_utilities.unary_unary_inline(servicer.InspectCommit),
      ('pfs.API', 'InspectFile'): face_utilities.unary_unary_inline(servicer.InspectFile),
      ('pfs.API', 'InspectRepo'): face_utilities.unary_unary_inline(servicer.InspectRepo),
      ('pfs.API', 'ListBranch'): face_utilities.unary_unary_inline(servicer.ListBranch),
      ('pfs.API', 'ListCommit'): face_utilities.unary_unary_inline(servicer.ListCommit),
      ('pfs.API', 'ListFile'): face_utilities.unary_unary_inline(servicer.ListFile),
      ('pfs.API', 'ListRepo'): face_utilities.unary_unary_inline(servicer.ListRepo),
      ('pfs.API', 'PutFile'): face_utilities.stream_unary_inline(servicer.PutFile),
      ('pfs.API', 'ReplayCommit'): face_utilities.unary_unary_inline(servicer.ReplayCommit),
      ('pfs.API', 'SquashCommit'): face_utilities.unary_unary_inline(servicer.SquashCommit),
      ('pfs.API', 'StartCommit'): face_utilities.unary_unary_inline(servicer.StartCommit),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_API_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('pfs.API', 'ArchiveAll'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'ArchiveCommit'): ArchiveCommitRequest.SerializeToString,
      ('pfs.API', 'CreateRepo'): CreateRepoRequest.SerializeToString,
      ('pfs.API', 'DeleteAll'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.API', 'DeleteCommit'): DeleteCommitRequest.SerializeToString,
      ('pfs.API', 'DeleteFile'): DeleteFileRequest.SerializeToString,
      ('pfs.API', 'DeleteRepo'): DeleteRepoRequest.SerializeToString,
      ('pfs.API', 'FinishCommit'): FinishCommitRequest.SerializeToString,
      ('pfs.API', 'FlushCommit'): FlushCommitRequest.SerializeToString,
      ('pfs.API', 'ForkCommit'): ForkCommitRequest.SerializeToString,
      ('pfs.API', 'GetFile'): GetFileRequest.SerializeToString,
      ('pfs.API', 'InspectCommit'): InspectCommitRequest.SerializeToString,
      ('pfs.API', 'InspectFile'): InspectFileRequest.SerializeToString,
      ('pfs.API', 'InspectRepo'): InspectRepoRequest.SerializeToString,
      ('pfs.API', 'ListBranch'): ListBranchRequest.SerializeToString,
      ('pfs.API', 'ListCommit'): ListCommitRequest.SerializeToString,
      ('pfs.API', 'ListFile'): ListFileRequest.SerializeToString,
      ('pfs.API', 'ListRepo'): ListRepoRequest.SerializeToString,
      ('pfs.API', 'PutFile'): PutFileRequest.SerializeToString,
      ('pfs.API', 'ReplayCommit'): ReplayCommitRequest.SerializeToString,
      ('pfs.API', 'SquashCommit'): SquashCommitRequest.SerializeToString,
      ('pfs.API', 'StartCommit'): StartCommitRequest.SerializeToString,
    }
    response_deserializers = {
      ('pfs.API', 'ArchiveAll'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'ArchiveCommit'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'CreateRepo'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'DeleteAll'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'DeleteCommit'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'DeleteFile'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'DeleteRepo'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'FinishCommit'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'FlushCommit'): CommitInfos.FromString,
      ('pfs.API', 'ForkCommit'): Commit.FromString,
      ('pfs.API', 'GetFile'): google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
      ('pfs.API', 'InspectCommit'): CommitInfo.FromString,
      ('pfs.API', 'InspectFile'): FileInfo.FromString,
      ('pfs.API', 'InspectRepo'): RepoInfo.FromString,
      ('pfs.API', 'ListBranch'): Branches.FromString,
      ('pfs.API', 'ListCommit'): CommitInfos.FromString,
      ('pfs.API', 'ListFile'): FileInfos.FromString,
      ('pfs.API', 'ListRepo'): RepoInfos.FromString,
      ('pfs.API', 'PutFile'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'ReplayCommit'): Commits.FromString,
      ('pfs.API', 'SquashCommit'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.API', 'StartCommit'): Commit.FromString,
    }
    cardinalities = {
      'ArchiveAll': cardinality.Cardinality.UNARY_UNARY,
      'ArchiveCommit': cardinality.Cardinality.UNARY_UNARY,
      'CreateRepo': cardinality.Cardinality.UNARY_UNARY,
      'DeleteAll': cardinality.Cardinality.UNARY_UNARY,
      'DeleteCommit': cardinality.Cardinality.UNARY_UNARY,
      'DeleteFile': cardinality.Cardinality.UNARY_UNARY,
      'DeleteRepo': cardinality.Cardinality.UNARY_UNARY,
      'FinishCommit': cardinality.Cardinality.UNARY_UNARY,
      'FlushCommit': cardinality.Cardinality.UNARY_UNARY,
      'ForkCommit': cardinality.Cardinality.UNARY_UNARY,
      'GetFile': cardinality.Cardinality.UNARY_STREAM,
      'InspectCommit': cardinality.Cardinality.UNARY_UNARY,
      'InspectFile': cardinality.Cardinality.UNARY_UNARY,
      'InspectRepo': cardinality.Cardinality.UNARY_UNARY,
      'ListBranch': cardinality.Cardinality.UNARY_UNARY,
      'ListCommit': cardinality.Cardinality.UNARY_UNARY,
      'ListFile': cardinality.Cardinality.UNARY_UNARY,
      'ListRepo': cardinality.Cardinality.UNARY_UNARY,
      'PutFile': cardinality.Cardinality.STREAM_UNARY,
      'ReplayCommit': cardinality.Cardinality.UNARY_UNARY,
      'SquashCommit': cardinality.Cardinality.UNARY_UNARY,
      'StartCommit': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'pfs.API', cardinalities, options=stub_options)


  class BetaBlockAPIServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def PutBlock(self, request_iterator, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetBlock(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteBlock(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def InspectBlock(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListBlock(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaBlockAPIStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def PutBlock(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    PutBlock.future = None
    def GetBlock(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    def DeleteBlock(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DeleteBlock.future = None
    def InspectBlock(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    InspectBlock.future = None
    def ListBlock(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    ListBlock.future = None


  def beta_create_BlockAPI_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('pfs.BlockAPI', 'DeleteBlock'): DeleteBlockRequest.FromString,
      ('pfs.BlockAPI', 'GetBlock'): GetBlockRequest.FromString,
      ('pfs.BlockAPI', 'InspectBlock'): InspectBlockRequest.FromString,
      ('pfs.BlockAPI', 'ListBlock'): ListBlockRequest.FromString,
      ('pfs.BlockAPI', 'PutBlock'): PutBlockRequest.FromString,
    }
    response_serializers = {
      ('pfs.BlockAPI', 'DeleteBlock'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('pfs.BlockAPI', 'GetBlock'): google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
      ('pfs.BlockAPI', 'InspectBlock'): BlockInfo.SerializeToString,
      ('pfs.BlockAPI', 'ListBlock'): BlockInfos.SerializeToString,
      ('pfs.BlockAPI', 'PutBlock'): BlockRefs.SerializeToString,
    }
    method_implementations = {
      ('pfs.BlockAPI', 'DeleteBlock'): face_utilities.unary_unary_inline(servicer.DeleteBlock),
      ('pfs.BlockAPI', 'GetBlock'): face_utilities.unary_stream_inline(servicer.GetBlock),
      ('pfs.BlockAPI', 'InspectBlock'): face_utilities.unary_unary_inline(servicer.InspectBlock),
      ('pfs.BlockAPI', 'ListBlock'): face_utilities.unary_unary_inline(servicer.ListBlock),
      ('pfs.BlockAPI', 'PutBlock'): face_utilities.stream_unary_inline(servicer.PutBlock),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_BlockAPI_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('pfs.BlockAPI', 'DeleteBlock'): DeleteBlockRequest.SerializeToString,
      ('pfs.BlockAPI', 'GetBlock'): GetBlockRequest.SerializeToString,
      ('pfs.BlockAPI', 'InspectBlock'): InspectBlockRequest.SerializeToString,
      ('pfs.BlockAPI', 'ListBlock'): ListBlockRequest.SerializeToString,
      ('pfs.BlockAPI', 'PutBlock'): PutBlockRequest.SerializeToString,
    }
    response_deserializers = {
      ('pfs.BlockAPI', 'DeleteBlock'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('pfs.BlockAPI', 'GetBlock'): google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
      ('pfs.BlockAPI', 'InspectBlock'): BlockInfo.FromString,
      ('pfs.BlockAPI', 'ListBlock'): BlockInfos.FromString,
      ('pfs.BlockAPI', 'PutBlock'): BlockRefs.FromString,
    }
    cardinalities = {
      'DeleteBlock': cardinality.Cardinality.UNARY_UNARY,
      'GetBlock': cardinality.Cardinality.UNARY_STREAM,
      'InspectBlock': cardinality.Cardinality.UNARY_UNARY,
      'ListBlock': cardinality.Cardinality.UNARY_UNARY,
      'PutBlock': cardinality.Cardinality.STREAM_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'pfs.BlockAPI', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
