.\" Man page generated from reStructuredText.
.
.TH "KIWI" "2" "Mar 30, 2017" "9.4.5" "kiwi"
.SH NAME
kiwi \- Creating Operating System Images
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
kiwi [global options] service <command> [<args>]

kiwi \-h | \-\-help
kiwi [\-\-profile=<name>...]
     [\-\-type=<build_type>]
     [\-\-logfile=<filename>]
     [\-\-debug]
     [\-\-color\-output]
    image <command> [<args>...]
kiwi [\-\-debug]
     [\-\-color\-output]
    result <command> [<args>...]
kiwi [\-\-profile=<name>...]
     [\-\-shared\-cache\-dir=<directory>]
     [\-\-type=<build_type>]
     [\-\-logfile=<filename>]
     [\-\-debug]
     [\-\-color\-output]
    system <command> [<args>...]
kiwi \-\-compat <legacy_args>...
kiwi \-v | \-\-version
kiwi help
.ft P
.fi
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
KIWI is an imaging solution that is based on an image XML description.
Such a description is represented by a directory which includes at least
one \fBconfig.xml\fP or \fB\&.kiwi\fP file and may as well include other files like
scripts or configuration data.
.sp
A collection of example image descriptions can be found on the github
repository here: \fI\%https://github.com/SUSE/kiwi\-descriptions\fP\&. Most of the
descriptions provide a so called JeOS image. JeOS means Just enough
Operating System. A JeOS is a small, text only based image including a
predefined remote source setup to allow installation of missing
software components at a later point in time.
.sp
KIWI operates in two steps. The system build command combines
both steps into one to make it easier to start with KIWI. The first
step is the preparation step and if that step was successful, a
creation step follows which is able to create different image output
types.
.sp
In the preparation step, you prepare a directory including the contents
of your new filesystem based on one or more software package source(s)
The creation step is based on the result of the preparation step and
uses the contents of the new image root tree to create the output
image.
.sp
KIWI supports the creation of the following image types:
.INDENT 0.0
.IP \(bu 2
ISO Live Systems
.IP \(bu 2
Virtual Disk for e.g cloud frameworks
.IP \(bu 2
OEM Expandable Disk for system deployment from ISO or the network
.IP \(bu 2
File system images for deployment in a pxe boot environment
.UNINDENT
.sp
Depending on the image type a variety of different disk formats and
architectures are supported.
.SH GLOBAL OPTIONS
.INDENT 0.0
.TP
.B \-\-color\-output
Use Escape Sequences to print different types of information
in colored output. The underlaying terminal has to understand
those escape characters. Error messages appear red, warning
messages yellow and debugging information will be printed light
grey.
.TP
.B \-\-compat
Support legacy kiwi commandline, see COMPATIBILITY section for details.
.TP
.B \-\-debug
Print debug information on the commandline.
.TP
.BI \-\-logfile\fB= <filename>
Specify log file. the logfile contains detailed information about
the process.
.TP
.BI \-\-profile\fB= <name>
Select profile to use. The specified profile must be part of the
XML description. The option can be specified multiple times to
allow using a combination of profiles
.TP
.BI \-\-shared\-cache\-dir\fB= <directory>
Specify an alternative shared cache directory. The directory
is shared via bind mount between the build host and image
root system and contains information about package repositories
and their cache and meta data. The default location is set
to /var/cache/kiwi
.TP
.BI \-\-type\fB= <build_type>
Select image build type. The specified build type must be configured
as part of the XML description.
.TP
.B \-\-version
Show program version
.UNINDENT
.SH EXAMPLE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ git clone https://github.com/SUSE/kiwi\-descriptions

$ kiwi \-\-type vmx system build \e
    \-\-description kiwi\-descriptions/suse/x86_64/suse\-leap\-42.1\-JeOS \e
    \-\-target\-dir /tmp/myimage
.ft P
.fi
.UNINDENT
.UNINDENT
.SH SERVICES AND COMMANDS
.SS kiwi image resize
.SS SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
kiwi [global options] service <command> [<args>]

kiwi image resize \-h | \-\-help
kiwi image resize \-\-target\-dir=<directory> \-\-size=<size>
    [\-\-root=<directory>]
kiwi image resize help
.ft P
.fi
.UNINDENT
.UNINDENT
.SS DESCRIPTION
.sp
For disk based images, allow to resize the image to a new disk geometry.
The additional space is free and not in use by the image. In order to
make use of the additional free space a repartition process is required
like it is provided by kiwi\(aqs oem boot code. Therefore the resize operation
is useful for oem image builds most of the time.
.SS OPTIONS
.INDENT 0.0
.TP
.BI \-\-root\fB= <directory>
The path to the root directory, if not specified kiwi
searches the root directory in build/image\-root below
the specified target directory
.TP
.BI \-\-size\fB= <size>
New size of the image. The value is either a size in bytes
or can be specified with m=MB or g=GB. Example: 20g
.TP
.BI \-\-target\-dir\fB= <directory>
Directory containing the kiwi build results
.UNINDENT
.SS kiwi image info
.SS SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
kiwi [global options] service <command> [<args>]

kiwi image info \-h | \-\-help
kiwi image info \-\-description=<directory>
    [\-\-resolve\-package\-list]
    [\-\-ignore\-repos]
    [\-\-add\-repo=<source,type,alias,priority>...]
    [\-\-obs\-repo\-internal]
kiwi image info help
.ft P
.fi
.UNINDENT
.UNINDENT
.SS DESCRIPTION
.sp
Provides information about the specified image description.
If no specific info option is provided the command just
lists basic information about the image which could also be
directly obtained by reading the image XML description file.
Specifying an extension option like \fBresolve\-package\-list\fP
will cause a dependency resolver to run over the list of
packages and thus provides more detailed information about
the image description.
.SS OPTIONS
.INDENT 0.0
.TP
.BI \-\-add\-repo\fB= <source,type,alias,priority>
Add repository with given source, type, alias and priority.
.TP
.BI \-\-description\fB= <directory>
The description must be a directory containing a kiwi XML
description and optional metadata files.
.TP
.B \-\-ignore\-repos
Ignore all repos from the XML configuration.
.TP
.B \-\-obs\-repo\-internal
When using obs repos resolve them using the SUSE internal
buildservice. This only works if access to SUSE\(aqs internal
buildservice is granted.
.TP
.B \-\-resolve\-package\-list
Solve package dependencies and return a list of all
packages including their attributes e.g size,
shasum, and more.
.UNINDENT
.SS kiwi result list
.SS SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
kiwi [global options] service <command> [<args>]

kiwi result list \-h | \-\-help
kiwi result list \-\-target\-dir=<directory>
kiwi result list help
.ft P
.fi
.UNINDENT
.UNINDENT
.SS DESCRIPTION
.sp
List build results from a previous build or create command.
Please note if you build an image several times with the same
target directory the build result information will be overwritten
each time you build the image. Therefore the build result list
is valid for the last build
.SS OPTIONS
.INDENT 0.0
.TP
.BI \-\-target\-dir\fB= <directory>
directory containing the kiwi build results
.UNINDENT
.SS kiwi result bundle
.SS SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
kiwi [global options] service <command> [<args>]

kiwi result bundle \-h | \-\-help
kiwi result bundle \-\-target\-dir=<directory> \-\-id=<bundle_id> \-\-bundle\-dir=<directory>
kiwi result bundle help
.ft P
.fi
.UNINDENT
.UNINDENT
.SS DESCRIPTION
.sp
Create result bundle from the image build results in the specified target
directory. Each result image will contain the specified bundle identifier
as part of its filename. Uncompressed image files will also become xz
compressed and a sha sum will be created from every result image.
.SS OPTIONS
.INDENT 0.0
.TP
.BI \-\-bundle\-dir\fB= <directory>
directory containing the bundle results, compressed versions of
image results and their sha sums
.TP
.BI \-\-id\fB= <bundle_id>
bundle id, could be a free form text and is appended to the image
version information if present as part of the result image filename
.TP
.BI \-\-target\-dir\fB= <directory>
directory containing the kiwi build results
.UNINDENT
.SS kiwi system prepare
.SS SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
kiwi [global options] service <command> [<args>]

kiwi system prepare \-h | \-\-help
kiwi system prepare \-\-description=<directory> \-\-root=<directory>
    [\-\-allow\-existing\-root]
    [\-\-ignore\-repos]
    [\-\-set\-repo=<source,type,alias,priority>]
    [\-\-add\-repo=<source,type,alias,priority>...]
    [\-\-obs\-repo\-internal]
    [\-\-add\-package=<name>...]
    [\-\-delete\-package=<name>...]
kiwi system prepare help
.ft P
.fi
.UNINDENT
.UNINDENT
.SS DESCRIPTION
.sp
Create a new image root directory. The prepare step builds a new image
root directory from the specified XML description. The specified
root directory is the root directory of the new image root system.
As the root user you can enter this system via chroot as follows:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ chroot <directory> bash
.ft P
.fi
.UNINDENT
.UNINDENT
.SS OPTIONS
.INDENT 0.0
.TP
.BI \-\-add\-package\fB= <name>
specify package to add(install). The option can be specified
multiple times
.TP
.BI \-\-add\-repo\fB= <source,type,alias,priority>
See the kiwi::system::build manual page for further details
.TP
.B \-\-allow\-existing\-root
allow to re\-use an existing image root directory
.TP
.BI \-\-delete\-package\fB= <name>
specify package to delete. The option can be specified
multiple times
.TP
.BI \-\-description\fB= <directory>
Path to the kiwi XML description. Inside of that directory there
must be at least a config.xml of *.kiwi XML description.
.TP
.B \-\-obs\-repo\-internal
See the kiwi::system::build manual page for further details
.TP
.BI \-\-root\fB= <directory>
Path to create the new root system.
.TP
.BI \-\-set\-repo\fB= <source,type,alias,priority>
See the kiwi::system::build manual page for further details
.UNINDENT
.SS kiwi system create
.SS SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
kiwi [global options] service <command> [<args>]

kiwi system create \-h | \-\-help
kiwi system create \-\-root=<directory> \-\-target\-dir=<directory>
kiwi system create help
.ft P
.fi
.UNINDENT
.UNINDENT
.SS DESCRIPTION
.sp
Create an image from a previously prepared image root directory.
The kiwi create call is usually issued after a kiwi prepare command
and builds the requested image type in the specified target directory
.SS OPTIONS
.INDENT 0.0
.TP
.BI \-\-root\fB= <directory>
Path to the image root directory. This directory is usually created
by the kiwi prepare command. If a directory is used which was not
created by kiwi\(aqs prepare command, it\(aqs important to know that kiwi
stores image build metadata below the image/ directory which needs
to be present in order to let the create command operate correctly.
.TP
.BI \-\-target\-dir\fB= <directory>
Path to store the build results.
.UNINDENT
.SS kiwi system update
.SS SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
kiwi [global options] service <command> [<args>]

kiwi system update \-h | \-\-help
kiwi system update \-\-root=<directory>
    [\-\-add\-package=<name>...]
    [\-\-delete\-package=<name>...]
kiwi system update help
.ft P
.fi
.UNINDENT
.UNINDENT
.SS DESCRIPTION
.sp
Update a previously prepare image root tree. The update command
refreshes the contents of the root directory with potentially new
versions of the packages according to the repository setup of the
image XML description. In addition the update command also allows
to add or remove packages from the image root tree
.SS OPTIONS
.INDENT 0.0
.TP
.BI \-\-add\-package\fB= <name>
specify package to add(install). The option can be specified
multiple times
.TP
.BI \-\-delete\-package\fB= <name>
specify package to delete. The option can be specified
multiple times
.TP
.BI \-\-root\fB= <directory>
Path to the root directory of the image.
.UNINDENT
.SS kiwi system build
.SS SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
kiwi [global options] service <command> [<args>]

kiwi system build \-h | \-\-help
kiwi system build \-\-description=<directory> \-\-target\-dir=<directory>
    [\-\-ignore\-repos]
    [\-\-set\-repo=<source,type,alias,priority>]
    [\-\-add\-repo=<source,type,alias,priority>...]
    [\-\-obs\-repo\-internal]
    [\-\-add\-package=<name>...]
    [\-\-delete\-package=<name>...]
kiwi system build help
.ft P
.fi
.UNINDENT
.UNINDENT
.SS DESCRIPTION
.sp
build an image in one step. The build command combines kiwi\(aqs prepare and
create steps in order to build an image with just one command call. The
build command creates the root directory of the image below
\fB<target\-dir>/build/image\-root\fP and if not specified differently writes
a log file \fB<target\-dir>/build/image\-root.log\fP\&. The result image files
are created in the specified target\-dir.
.SS OPTIONS
.INDENT 0.0
.TP
.BI \-\-add\-package\fB= <name>
specify package to add(install). The option can be specified
multiple times
.TP
.BI \-\-add\-repo\fB= <source,type,alias,priority>
Add a new repository to the existing repository setup in the XML
description. This option can be specified multiple times
.TP
.BI \-\-delete\-package\fB= <name>
specify package to delete. The option can be specified
multiple times
.TP
.BI \-\-description\fB= <directory>
Path to the XML description. This is a directory containing at least
one _config.xml_ or _*.kiwi_ XML file.
.TP
.B \-\-obs\-repo\-internal
The repository source type \fBobs://\fP by default points to the
\fI\%Open Build Service\fP\&. With the
\fI\-\-obs\-repo\-internal\fP option the source type is changed to the
\fBibs://\fP type, pointing to the \fBInternal Build Service\fP\&.
This allows to build images with repositories pointing to the SUSE
internal build service. Please note this requires access permissions
to the SUSE internal build service on the machine building the image.
.TP
.BI \-\-set\-repo\fB= <source,type,alias,priority>
Overwrite the first repository entry in the XML description with the
provided information:
.INDENT 7.0
.IP \(bu 2
\fBsource\fP
.sp
source url, pointing to a package repository which must be in a format
supported by the selected package manager. See the URI_TYPES section for
details about the supported source locators.
.IP \(bu 2
\fBtype\fP
.sp
repository type, could be one of \fBrpm\-md\fP, \fBrpm\-dir\fP or \fByast2\fP\&.
.IP \(bu 2
\fBalias\fP
.sp
An alias name for the repository. If not specified kiwi calculates
an alias name as result from a sha sum. The sha sum is used to uniquely
identify the repository, but not very expressive. We recommend to
set an expressive and uniq alias name.
.IP \(bu 2
\fBpriority\fP
.sp
A number indicating the repository priority. How the value is evaluated
depends on the selected package manager. Please refer to the package
manager documentation for details about the supported priority ranges
and their meaning.
.UNINDENT
.TP
.BI \-\-target\-dir\fB= <directory>
Path to store the build results.
.UNINDENT
.SS URI_TYPES
.INDENT 0.0
.IP \(bu 2
\fBhttp://\fP | \fBhttps://\fP | \fBftp://\fP
.sp
remote repository delivered via http or ftp protocol.
.IP \(bu 2
\fBobs://\fP
.sp
Open Buildservice repository. The source data is translated into
an http url pointing to \fI\%http://download.opensuse.org\fP\&.
.IP \(bu 2
\fBibs://\fP
.sp
Internal Open Buildservice repository. The source data is translated into
an http url pointing to download.suse.de.
.IP \(bu 2
\fBiso://\fP
.sp
Local iso file. kiwi loop mounts the file and uses the mount point
as temporary directory source type
.IP \(bu 2
\fBdir://\fP
.sp
Local directory
.UNINDENT
.SH COMPATIBILITY
.sp
This version of KIWI uses a different caller syntax compared to
former versions. However there is a compatibility mode which allows
to use a legacy KIWI commandline as follows:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ kiwi \-\-compat \-\- \e
    \-\-build kiwi\-descriptions/suse/x86_64/suse\-leap\-42.1\-JeOS \e
    \-\-type vmx \-d /tmp/myimage
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Marcus Schäfer
.SH COPYRIGHT
2016, Marcus Schäfer
.\" Generated by docutils manpage writer.
.
