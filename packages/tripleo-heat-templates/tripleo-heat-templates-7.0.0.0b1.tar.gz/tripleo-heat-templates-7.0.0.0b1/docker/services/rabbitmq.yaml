heat_template_version: ocata

description: >
  OpenStack containerized Rabbitmq service

parameters:
  DockerNamespace:
    description: namespace
    default: 'tripleoupstream'
    type: string
  DockerRabbitmqImage:
    description: image
    default: 'centos-binary-rabbitmq:latest'
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RabbitCookie:
    type: string
    default: ''
    hidden: true

resources:

  RabbitmqBase:
    type: ../../puppet/services/rabbitmq.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}

outputs:
  role_data:
    description: Role data for the Rabbitmq API role.
    value:
      service_name: {get_attr: [RabbitmqBase, role_data, service_name]}
      config_settings: {get_attr: [RabbitmqBase, role_data, config_settings]}
      step_config: &step_config
        get_attr: [RabbitmqBase, role_data, step_config]
      service_config_settings: {get_attr: [RabbitmqBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: rabbitmq
        puppet_tags: file
        step_config: *step_config
        config_image: &rabbitmq_image
          list_join:
            - '/'
            - [ {get_param: DockerNamespace}, {get_param: DockerRabbitmqImage} ]
      kolla_config:
        /var/lib/kolla/config_files/rabbitmq.json:
          command: /usr/lib/rabbitmq/bin/rabbitmq-server
      docker_config:
        step_1:
          rabbitmq_bootstrap:
            start_order: 0
            image: *rabbitmq_image
            net: host
            privileged: false
            volumes:
              - /var/lib/kolla/config_files/rabbitmq.json:/var/lib/kolla/config_files/config.json:ro
              - /var/lib/config-data/rabbitmq/etc/rabbitmq/:/etc/rabbitmq/:ro
              - /etc/hosts:/etc/hosts:ro
              - /etc/localtime:/etc/localtime:ro
              - /var/lib/rabbitmq:/var/lib/rabbitmq
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
              - KOLLA_BOOTSTRAP=True
              - 
                list_join:
                  - '='
                  - - 'RABBITMQ_CLUSTER_COOKIE'
                    -
                      yaql:
                        expression: $.data.passwords.where($ != '').first()
                        data:
                          passwords:
                            - {get_param: RabbitCookie}
                            - {get_param: [DefaultPasswords, rabbit_cookie]}
          rabbitmq:
            start_order: 1
            image: *rabbitmq_image
            net: host
            privileged: false
            restart: always
            volumes:
              - /var/lib/kolla/config_files/rabbitmq.json:/var/lib/kolla/config_files/config.json:ro
              - /var/lib/config-data/rabbitmq/etc/rabbitmq/:/etc/rabbitmq/:ro
              - /etc/hosts:/etc/hosts:ro
              - /etc/localtime:/etc/localtime:ro
              - /var/lib/rabbitmq:/var/lib/rabbitmq
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      host_prep_tasks:
        - name: create /var/lib/rabbitmq
          file:
            path: /var/lib/rabbitmq
            state: directory
      upgrade_tasks:
        - name: Stop and disable rabbitmq service
          tags: step2
          service: name=rabbitmq-server state=stopped enabled=no
