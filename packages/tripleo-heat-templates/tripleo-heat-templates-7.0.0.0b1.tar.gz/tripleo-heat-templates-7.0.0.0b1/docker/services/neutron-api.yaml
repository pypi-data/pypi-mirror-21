heat_template_version: ocata

description: >
  OpenStack containerized Neutron API service

parameters:
  DockerNamespace:
    description: namespace
    default: 'tripleoupstream'
    type: string
  DockerNeutronApiImage:
    description: image
    default: 'centos-binary-neutron-server:latest'
    type: string
  # we configure all neutron services in the same neutron
  DockerNeutronConfigImage:
    description: image
    default: 'centos-binary-neutron-openvswitch-agent:latest'
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json

resources:

  NeutronBase:
    type: ../../puppet/services/neutron-api.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}

outputs:
  role_data:
    description: Role data for the Neutron API role.
    value:
      service_name: {get_attr: [NeutronBase, role_data, service_name]}
      config_settings:
        map_merge:
          - get_attr: [NeutronBase, role_data, config_settings]
      step_config: &step_config
        get_attr: [NeutronBase, role_data, step_config]
      service_config_settings: {get_attr: [NeutronBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: neutron
        puppet_tags: neutron_config,neutron_api_config
        step_config: *step_config
        config_image:
          list_join:
            - '/'
            - [ {get_param: DockerNamespace}, {get_param: DockerNeutronConfigImage} ]
      kolla_config:
        /var/lib/kolla/config_files/neutron_api.json:
          command: /usr/bin/neutron-server --config-file /usr/share/neutron/neutron-dist.conf --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugin.ini
      docker_config:
        step_3:
          neutron_db_sync:
            image: &neutron_api_image
              list_join:
                - '/'
                - [ {get_param: DockerNamespace}, {get_param: DockerNeutronApiImage} ]
            net: host
            privileged: false
            detach: false
            # FIXME: we should make config file permissions right
            # and run as neutron user
            user: root
            volumes:
              - /var/lib/config-data/neutron/etc/neutron:/etc/neutron:ro
              - /var/lib/config-data/neutron/usr/share/neutron:/usr/share/neutron:ro
              - /etc/hosts:/etc/hosts:ro
              - /etc/localtime:/etc/localtime:ro
            command: ['neutron-db-manage', 'upgrade', 'heads']
        step_4:
          neutron_api:
            image: *neutron_api_image
            net: host
            privileged: false
            restart: always
            volumes:
              - /var/lib/kolla/config_files/neutron_api.json:/var/lib/kolla/config_files/config.json:ro
              - /var/lib/config-data/neutron/etc/neutron/:/etc/neutron/:ro
              - /etc/hosts:/etc/hosts:ro
              - /etc/localtime:/etc/localtime:ro
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      upgrade_tasks:
        - name: Stop and disable neutron_api service
          tags: step2
          service: name=neutron-server state=stopped enabled=no
