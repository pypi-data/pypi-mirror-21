# coding: utf-8

"""
    OrderCloud

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 1.0
    Contact: ordercloud@four51.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class AdminCompany(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, name=None, id=None, owner_dev_id=None, auto_forwarding_user_id=None):
        """
        AdminCompany - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'name': 'str',
            'id': 'str',
            'owner_dev_id': 'int',
            'auto_forwarding_user_id': 'str'
        }

        self.attribute_map = {
            'name': 'Name',
            'id': 'ID',
            'owner_dev_id': 'OwnerDevID',
            'auto_forwarding_user_id': 'AutoForwardingUserID'
        }

        self._name = name
        self._id = id
        self._owner_dev_id = owner_dev_id
        self._auto_forwarding_user_id = auto_forwarding_user_id

    @property
    def name(self):
        """
        Gets the name of this AdminCompany.


        :return: The name of this AdminCompany.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this AdminCompany.


        :param name: The name of this AdminCompany.
        :type: str
        """

        self._name = name

    @property
    def id(self):
        """
        Gets the id of this AdminCompany.


        :return: The id of this AdminCompany.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this AdminCompany.


        :param id: The id of this AdminCompany.
        :type: str
        """

        self._id = id

    @property
    def owner_dev_id(self):
        """
        Gets the owner_dev_id of this AdminCompany.


        :return: The owner_dev_id of this AdminCompany.
        :rtype: int
        """
        return self._owner_dev_id

    @owner_dev_id.setter
    def owner_dev_id(self, owner_dev_id):
        """
        Sets the owner_dev_id of this AdminCompany.


        :param owner_dev_id: The owner_dev_id of this AdminCompany.
        :type: int
        """

        self._owner_dev_id = owner_dev_id

    @property
    def auto_forwarding_user_id(self):
        """
        Gets the auto_forwarding_user_id of this AdminCompany.


        :return: The auto_forwarding_user_id of this AdminCompany.
        :rtype: str
        """
        return self._auto_forwarding_user_id

    @auto_forwarding_user_id.setter
    def auto_forwarding_user_id(self, auto_forwarding_user_id):
        """
        Sets the auto_forwarding_user_id of this AdminCompany.


        :param auto_forwarding_user_id: The auto_forwarding_user_id of this AdminCompany.
        :type: str
        """

        self._auto_forwarding_user_id = auto_forwarding_user_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
