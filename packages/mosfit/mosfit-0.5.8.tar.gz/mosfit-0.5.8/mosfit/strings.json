{
    "band_load_complete": "Loading bands complete.",
    "bands_used": "Bands being used for current transient:",
    "burning": "Burning",
    "byline": "### !mM!e!gO!e!rS!e!yFi!e!bT!e -- Version {} ({}) ###\nAuthored by James Guillochon & Matt Nicholl\nReleased under the MIT license\n\nCode: !c!uhttps://github.com/guillochon/MOSFiT!e!e\nDocumentation: !c!uhttps://mosfit.readthedocs.io!e!e\n",
    "cant_read_svo": "Error: Could not read SVO filter!",
    "cant_dl_event": "Could not download data for `{}`, will attempt to use cached data.",
    "cant_dl_names": "Could not download {} names (are you online?), using cached list.",
    "cant_dl_svo": "Could not download SVO filter (are you online?), using cached filter.",
    "cant_read_names": "Could not read list of {} names!",
    "converged": "Converged!",
    "copying": "Copying MOSFiT folder hierarchy to current working directory (disable with `--no-copy-at-launch`).",
    "ctrl_c": "\b\bCtrl + C pressed, halting...",
    "dl_svo": "Downloading bandpass `{}` from SVO...",
    "dling_aliases": "Event `{}` interpreted as transient name, downloading lists of transient aliases...",
    "dling_event": "Found event by primary name `{}` in the `{}`, downloading data...",
    "drawing_walkers": "Drawing initial walkers",
    "exceeded_walltime": "Walltime exceeded, exiting...",
    "files": "Basic model file:\n  {}\nModel file:\n  {}\nParameter file:\n  {}",
    "fracking": "Fracking",
    "fracking_results": "Fracking results",
    "fracking_scores": "Fracking scores",
    "gen_dummy": "No event specified, generating dummy data.",
    "install_db": "Dropbox python package required for uploads. Install with `pip install dropbox`.",
    "enabling_s": "Enabling `-S` as extra bands were defined.",
    "error": "Error",
    "estimated_time": "Estimated time left",
    "event_file": "Event file:\n  {}",
    "initial_draws": "Initial draws completed!",
    "loading_bands": "Loading bands [ {0:.0f}% ]",
    "min_max_same": "Minimum and maximum values are the same for `{}`, treating variable as a fixed parameter.",
    "moves_accepted": "Moves accepted",
    "nmeas_nfree": "{} measurements, {} free parameters.",
    "no_data": "Could not find data for `{}` locally or in the `{}`.",
    "no_walker_data": "Could not find walker data.",
    "no_ul_waic": "WAIC score `{}` below 0.0, not uploading this fit.",
    "no_event_by_name": "Could not find event by that name, skipping!",
    "no_events_models": "No events or models specified, initializing and then exiting.",
    "no_model_for_type": "No model available that matches the given transient's claimed type.",
    "no_model_type": "No model specified and no claimed type for specified transient.",
    "no_models_avail": "Skipping `{}`, no models available to fit the transient.",
    "no_processes": "MPI was unable to find any processes. This suggests that `mpi4py` was installed while another MPI library other than the one presently installed was active. Try re-installing either openmpi or mpich. Continuing in serial mode.",
    "omit_offline": "Try omitting the `--offline` flag.",
    "pef_ext_search": "Could not find event, performing extended name search...",
    "progress": "Progress",
    "run_until_converged": "Running until convergence",
    "saving_output": "Saving output to disk...",
    "select_model_walkers": "More than one model output in this file, which model's walkers should we draw from?",
    "score_ranges": "Score ranges",
    "too_few_walkers": "Number of free parameters exceeds number of measurements. Please treat results with caution.",
    "ul_complete": "Uploading complete!",
    "ul_fit": "Uploading fit...\nData hash: {}, model hash: {}",
    "unmatched_obs": "Some observations had no match in the database.\nUnmatched observations: ",
    "walker_file": "Walker file:\n  {}",
    "walking": "Walking",
    "want_more_walkers": "While `emcee` accepts a number of walkers that is twice the number of dimensions or greater, simple tests with toy problems show poor convergence with this minimum. We suggest using at least 10x the number of dimensions (`-N {}` suggested, you have `-N {}`), and preferably more if feasible.\n\n",
    "warning": "Warning",
    "writing_extras": "Writing extra keys...",
    "writing_full_chain": "Writing full chain...",
    "writing_model": "Writing model output..."
}
