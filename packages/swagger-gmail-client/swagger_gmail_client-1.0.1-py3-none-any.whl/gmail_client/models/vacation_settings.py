# coding: utf-8

"""
    Gmail

    Access Gmail mailboxes including sending user email.

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class VacationSettings(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, enable_auto_reply=None, end_time=None, response_body_html=None, response_body_plain_text=None, response_subject=None, restrict_to_contacts=None, restrict_to_domain=None, start_time=None):
        """
        VacationSettings - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'enable_auto_reply': 'bool',
            'end_time': 'str',
            'response_body_html': 'str',
            'response_body_plain_text': 'str',
            'response_subject': 'str',
            'restrict_to_contacts': 'bool',
            'restrict_to_domain': 'bool',
            'start_time': 'str'
        }

        self.attribute_map = {
            'enable_auto_reply': 'enableAutoReply',
            'end_time': 'endTime',
            'response_body_html': 'responseBodyHtml',
            'response_body_plain_text': 'responseBodyPlainText',
            'response_subject': 'responseSubject',
            'restrict_to_contacts': 'restrictToContacts',
            'restrict_to_domain': 'restrictToDomain',
            'start_time': 'startTime'
        }

        self._enable_auto_reply = enable_auto_reply
        self._end_time = end_time
        self._response_body_html = response_body_html
        self._response_body_plain_text = response_body_plain_text
        self._response_subject = response_subject
        self._restrict_to_contacts = restrict_to_contacts
        self._restrict_to_domain = restrict_to_domain
        self._start_time = start_time

    @property
    def enable_auto_reply(self):
        """
        Gets the enable_auto_reply of this VacationSettings.
        Flag that controls whether Gmail automatically replies to messages.

        :return: The enable_auto_reply of this VacationSettings.
        :rtype: bool
        """
        return self._enable_auto_reply

    @enable_auto_reply.setter
    def enable_auto_reply(self, enable_auto_reply):
        """
        Sets the enable_auto_reply of this VacationSettings.
        Flag that controls whether Gmail automatically replies to messages.

        :param enable_auto_reply: The enable_auto_reply of this VacationSettings.
        :type: bool
        """

        self._enable_auto_reply = enable_auto_reply

    @property
    def end_time(self):
        """
        Gets the end_time of this VacationSettings.
        An optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.

        :return: The end_time of this VacationSettings.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """
        Sets the end_time of this VacationSettings.
        An optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.

        :param end_time: The end_time of this VacationSettings.
        :type: str
        """

        self._end_time = end_time

    @property
    def response_body_html(self):
        """
        Gets the response_body_html of this VacationSettings.
        Response body in HTML format. Gmail will sanitize the HTML before storing it.

        :return: The response_body_html of this VacationSettings.
        :rtype: str
        """
        return self._response_body_html

    @response_body_html.setter
    def response_body_html(self, response_body_html):
        """
        Sets the response_body_html of this VacationSettings.
        Response body in HTML format. Gmail will sanitize the HTML before storing it.

        :param response_body_html: The response_body_html of this VacationSettings.
        :type: str
        """

        self._response_body_html = response_body_html

    @property
    def response_body_plain_text(self):
        """
        Gets the response_body_plain_text of this VacationSettings.
        Response body in plain text format.

        :return: The response_body_plain_text of this VacationSettings.
        :rtype: str
        """
        return self._response_body_plain_text

    @response_body_plain_text.setter
    def response_body_plain_text(self, response_body_plain_text):
        """
        Sets the response_body_plain_text of this VacationSettings.
        Response body in plain text format.

        :param response_body_plain_text: The response_body_plain_text of this VacationSettings.
        :type: str
        """

        self._response_body_plain_text = response_body_plain_text

    @property
    def response_subject(self):
        """
        Gets the response_subject of this VacationSettings.
        Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty.

        :return: The response_subject of this VacationSettings.
        :rtype: str
        """
        return self._response_subject

    @response_subject.setter
    def response_subject(self, response_subject):
        """
        Sets the response_subject of this VacationSettings.
        Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty.

        :param response_subject: The response_subject of this VacationSettings.
        :type: str
        """

        self._response_subject = response_subject

    @property
    def restrict_to_contacts(self):
        """
        Gets the restrict_to_contacts of this VacationSettings.
        Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.

        :return: The restrict_to_contacts of this VacationSettings.
        :rtype: bool
        """
        return self._restrict_to_contacts

    @restrict_to_contacts.setter
    def restrict_to_contacts(self, restrict_to_contacts):
        """
        Sets the restrict_to_contacts of this VacationSettings.
        Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.

        :param restrict_to_contacts: The restrict_to_contacts of this VacationSettings.
        :type: bool
        """

        self._restrict_to_contacts = restrict_to_contacts

    @property
    def restrict_to_domain(self):
        """
        Gets the restrict_to_domain of this VacationSettings.
        Flag that determines whether responses are sent to recipients who are outside of the user's domain. This feature is only available for G Suite users.

        :return: The restrict_to_domain of this VacationSettings.
        :rtype: bool
        """
        return self._restrict_to_domain

    @restrict_to_domain.setter
    def restrict_to_domain(self, restrict_to_domain):
        """
        Sets the restrict_to_domain of this VacationSettings.
        Flag that determines whether responses are sent to recipients who are outside of the user's domain. This feature is only available for G Suite users.

        :param restrict_to_domain: The restrict_to_domain of this VacationSettings.
        :type: bool
        """

        self._restrict_to_domain = restrict_to_domain

    @property
    def start_time(self):
        """
        Gets the start_time of this VacationSettings.
        An optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.

        :return: The start_time of this VacationSettings.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """
        Sets the start_time of this VacationSettings.
        An optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.

        :param start_time: The start_time of this VacationSettings.
        :type: str
        """

        self._start_time = start_time

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, VacationSettings):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
