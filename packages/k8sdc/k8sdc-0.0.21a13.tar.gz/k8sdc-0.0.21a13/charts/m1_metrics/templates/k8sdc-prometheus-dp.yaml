apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: k8sdc-prometheus
  namespace: {{ .Values.namespace }}
  labels:
    solution: m1_metrics
    product:  prometheus
    heritage: {{ .Release.Service | quote }}
    release:  {{ .Release.Name | quote }}
    chart:    "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      solution: m1_metrics
      product:  prometheus
  strategy: {'type': 'Recreate'}
  template:
    metadata:
      labels:
        solution: m1_metrics
        product:  prometheus
        heritage: {{ .Release.Service | quote }}
        release:  {{ .Release.Name | quote }}
        chart:    "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      containers:
        - name:  k8sdc-prometheus
          image: {{ .Values.prometheus_image }}:{{ .Values.prometheus_tag }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.pullPolicy }}
          args:
            - '-storage.local.retention=6h'
            - '-storage.local.memory-chunks=500000'
            - '-config.file=/etc/prometheus/prometheus.yml'
          ports:
            - name:          http
              containerPort: 9090
              protocol:      TCP
          volumeMounts:
            - name:      k8sdc-prometheus
              mountPath: /prometheus/
            - name:      k8sdc-prometheus-configmap
              mountPath: /etc/prometheus/
          resources:
            limits:
              cpu:    500m
              memory: 800Mi
            requests:
              cpu:    500m
              memory: 800Mi
      volumes:
        - name: k8sdc-prometheus-configmap
          configMap:
            name: k8sdc-prometheus
        - name: k8sdc-prometheus
          persistentVolumeClaim:
            claimName: k8sdc-prometheus
        
