Metadata-Version: 1.1
Name: djangorestframework-custom-paginations
Version: 1.2.1
Summary: Custom paginations for Django REST Framework
Home-page: https://github.com/unistra/django-rest-framework-custom-paginations
Author: Morgan Bohn
Author-email: morgan.bohn@unistra.fr
License: UNKNOWN
Download-URL: https://pypi.python.org/pypi/djangorestframework-custom-paginations
Description: django-rest-framework-custom-paginations
        ========================================
        
        Custom paginations for django rest framework
        
        Compatibility
        -------------
        
        work with :
         * Python 2.7 / 3.4
         * Dango 1.6 / 1.7
         * Django Rest Framework 2.4 / 3.0 / 3.1 / 3.2 / 3.3
        
        Installation
        ------------
        
        Install the package from pypi: ::
        
            pip install djangorestframework-custom-paginations
        
        Add the application in your django settings: ::
        
            DJANGO_APPS = ('rest_framework_custom_paginations',)
        
        Configure your rest framework for DRF >= 3.1: ::
        
            REST_FRAMEWORK = {
                'DEFAULT_PAGINATION_CLASS': 'rest_framework_custom_paginations.classes.SporePagination',
            }
        
        or configure your rest framework for DRF < 3.1: ::
        
            REST_FRAMEWORK = {
                'DEFAULT_PAGINATION_SERIALIZER_CLASS': 'rest_framework_custom_paginations.paginations.SporePaginationSerializer'
            }
        
        Usage
        -----
        
        Add the following parameters in a ListAPIView : ::
        
            class PersonList(generics.ListAPIView):
                """ list of person """
                ...
                paginate_by = 100
                paginate_by_param = 'page_size'
                max_paginate_by = 500
        
        Example
        -------
        
        Results of Spore Pagination : ::
        
            {
                "count": 532,
                "next": "http://myurls/persons.json?structure=mystructure&page=3",
                "next_params": {
                    "page": 3,
                    "structure": "mystructure"
                },
                "num_pages": 6,
                "previous": "http://myurls/persons.json?structure=mystructure&page=1",
                "previous_params": {
                    "page": 1,
                    "structure": "mystructure"
                },
                "results": [
                    ...
                ]
            }
        
Keywords: django,REST,rest_framework,paginations
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
