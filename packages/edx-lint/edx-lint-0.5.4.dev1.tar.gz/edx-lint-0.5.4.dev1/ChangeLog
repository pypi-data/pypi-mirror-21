CHANGES
=======

0.5.4.dev1
----------

* Switch the name of the description field so that the long_description is pulled from README.rst

0.5.3
-----

* Allow protected access in super_check.py
* Only require docstrings for functions longer than 5 lines
* Use the fixed version of astroid
* Add tox-battery to handle changing requirements
* Switch to pbr for setup.py so that we can easily install the tip of pylint and astroid
* Add a script that grants pylint amnesty
* Supply a full list of pylint warnings that edX cares about, with rationales supplied
* Add an .editorconfig file (and the ability to write new ones)
* Bump edx-lint version to 0.5.3 and pylint to 1.6.5

0.5.2
-----

* Upgrade pylint to 1.6.4
* Simplify and robustify the tests
* Make sure the code doesn't fail for old-style classes
* Required base class checking works
* Basic skeleton for settings
* Polish up layered_test_check
* fix typo in warning comment
* Specify an owner
* Add an OEP-2 compliant openedx.yaml file
* Remove deprecation warnings
* Stop false warnings on chained comparisons. Fixes #43
* Updated PyPI password
* Updated PyPI password
* v0.5.1
* The write command is now 100% covered
* Make the write command work on Py3.5
* Run coverage when we run tests
* Updated classifiers to reflect Python 3.5 support
* Updated version
* Testing with Python 3.5 on Travis
* Added test for the command that writes pylintrc files
* Updated requirements
* Added myself to AUTHORS
* Additional clarity for pylintrc_tweaks how-to
* Update to v0.4.3
* Updated .gitignore
* Added support for PyPI deployment via Travis
* Don't test on 3.5 now, pylint 1.4.x doesn't support it
* Make things work on py2 again. py3.5 is broken now
* Go back to pylint 1.4.x, since it works for edx-platform
* Add a few more test cases to cover some edges in the checkers
* Improve the assertion checker: more precise messages, and more of them
* Fix more pylint violations
* Add docstrings
* Conditionalize module_trace differently to be lighter-weight
* Fix pylint violations
* Use docstrings for the help on commands
* Add pylint to tox
* Upgrade to pylint 1.5.2, and go to Python 3.5
* Properly label ourselves for PyPI
* Change file operations back to byte strings
* Use tox for testing on multiple Pythons
* Clean up some tree management files
* v0.4.1
* Make the tests pass
* Allow function names to be 40 chars, just like method names
* Disable logging format interpolation
* Use pylint-celery to help in understanding celery
* Generated pylintrc, from a few commits
* More-complete instructions in the generated files
* Added Travis CI configuration
* Upgraded to Pylint 1.5.x
* Also check delattr for literal-used-as-attribute
* Make edx-lint commands work with both python2 and python3
* Use pylint_django
* Allow all c extensions to be loaded during linting
* Bump the version number
* Allow "class Meta" with no docstring
* mattdrayer/increment-version: Bump to v0.2.9
* 1. Code review fixes. 2. Also catch the "not in" case
* Adding myself to AUTHORS as per: https://github.com/edx/edx-platform/blob/master/CONTRIBUTING.rst
* Integrating right assert checker from here: https://github.com/Sveder/custom-lints
* Prepare package for distribution on PyPI
* Make it work on Python 3
* Bump version to 0.2.7
* Disable unused-wildcard-import
* Checker for tests inheriting from tests
* Bump version to 0.2.4
* Getattr message should be a C, not an E
* A checker for literal attribute names in getattr/setattr
* Fix an undefined name, although we have no tests for this line of code..
* Better implementation and testing of enabling/disabling of messages
* Fix tests
* range() problems are not Errors, they are Conventions
* Bump version to 0.2.3
* Remove unused import
* Check that range is being used well
* Use a defined constant since we defined it
* A 'checker' that logs what files are being linted
* useless-suppression is actually kind of confusing, don't do it yet
* Turn off locally-enabled, turn on useless-suppression
* Bump the version number
* Add setUpClass and tearDownClass; clean up code
