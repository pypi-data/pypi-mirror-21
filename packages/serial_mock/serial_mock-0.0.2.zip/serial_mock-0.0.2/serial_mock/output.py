
#autogenerated by serial_mock
import threading
from itertools import cycle
from serial_mock import Serial,serial_query
from serial_mock.decorators import bind_key_down

import sys

sys.verbose = "-v" in sys.argv
if sys.verbose:
    sys.argv.remove("-v")

class MySerial(Serial):
    read_started = None
    prompt = ""
    endline = ""
    rid = 2631
    responses = {"dump -rid":cycle(['2631\r>']),
                 "print off":cycle(['OK\r>']),
                 "get -config":cycle(['542\r>']),
                 "show":cycle(['AquaLab 4TE 2.09.8 rcfg S40006010\r>', 'AquaLab 4TE 2.09.8 rcfg S40006010\r>']),
                 "dump -range 2630 2631":cycle(['2630,545214257,,0,0.1339,25.19,0.1,\r1 1820\r>']),
                 "get -sn":cycle(['S40006010\r>']),
                 "dump -range 230":cycle(['0 80\r>']),"get -ver":cycle(['AS4 2.09.8 rcfg\r>']),"dum -":cycle(['ERROR\r>']),}

    @serial_query("start")
    def start(self,when='45'):
        threading.Timer(float(when), self.emit_reading)
    def emit_reading(self,*args):
        self._write_to_stream("Some reading\r>")
    @serial_query("dump -rid")
    def response_handler1(self):
        return "%s"% self.rid

    @serial_query("print off")
    def response_handler2(self):
        return next(self.responses["print off"])

    @serial_query("get -config")
    def response_handler3(self):
        return next(self.responses["get -config"])

    @serial_query("show")
    def response_handler4(self):
        return next(self.responses["show"])

    @serial_query("dump -range")
    def response_handler5(self,arg1,arg2):
        return next(self.responses["dump -range 2630 2631"])

    @serial_query("get -sn")
    def response_handler6(self):
        return next(self.responses["get -sn"])

    @serial_query("dump -range 230")
    def response_handler7(self):
        return next(self.responses["dump -range 230"])

    @serial_query("get -ver")
    def response_handler8(self):
        return next(self.responses["get -ver"])

    @serial_query("dum -")
    def response_handler9(self):
        return next(self.responses["dum -"])
    @bind_key_down('a')
    def increment_rid(self):
        self.rid += 1

if __name__ == "__main__":

   MySerial(sys.argv[1]).MainLoop()
