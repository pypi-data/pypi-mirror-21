[package]
name = "{{ name }}"
version = "{{ version }}"
description = "{{ description }}"

# Compatibe Python versions
python = ["~2.7", "^3.5"]

{% if not license %}
# The license of the package. Optional but recommended.
# For a full list of identifiers see https://www.spdx.org/licenses/
# license = "MIT"
{% else %}
license = "{{ license }}"
{% endif %}

{% if authors %}
authors = [
    {% for author in authors %}
    "{{ author }}"{% if not loop.last %},{% endif %}

    {% endfor %}
]
{% else %}
# Authors of the package
# Each author must be in the form: name <email>
authors = []
{% endif %}

# The readme file of the package.
#
# The file can be either README.rst or README.md.
#
# If it's a markdown file you have to install the pandoc utility
# so that it can be automatically converted to a RestructuredText file.
#
# You also need to have the pypandoc package installed.
# If you install poet via pip you can use the markdown-readme extra to do so.
readme = "README.rst"

{% if not homepage %}
# An URL to the homepage of the project.
# homepage = "https://github.com/sdispater/poet"
{% else %}
homepage = "{{ homepage }}"
{% endif %}
{% if not repository %}
# An URL to the repository of the project.
# repository = "https://github.com/sdispater/poet"
{% else %}
repository = "{{ repository }}"
{% endif %}
{% if not documentation %}
# An URL to the documentation of the project.
# documentation = "https://github.com/sdispater/poet"
{% else %}
documentation = "{{ documentation }}"
{% endif %}

{% if keywords %}
keywords = ['packaging', 'poet']
{% else %}
# A list of keywords (max: 5) that the package is related to.
# keywords = ["packaging", "poet"]
{% endif %}

# A list of patterns that will be included in the final package.
#
# Python packages, modules and package data will be automatically detected
# include = ['poet/**/*', 'LICENSE']
#
# If you packages lies elsewhere (like in a src directory),
# you can tell poet to find them from there:
# include = { from = 'src', include = '**/*' }
#
# Similarly, you can tell that the src directory represent the foo package:
# include = { from = 'src', include = '**/*', as = 'foo' }


# Features are sets of optional dependencies, which enhance a package,
# but are not required
# [features]
# markdown-readme = ["pypandoc"] # Adds support for markdown readmes

[dependencies]
# Main dependencies of the project
# See https://github.com/sdispater/poet#dependencies-and-dev-dependencies
{% if dependencies %}
{% for name, version in dependencies.items() %}
{{ name }} = "{{ version }}"
{% endfor %}
{% else %}
# toml = "^0.9"
# requests = "~2.13.0"
# cleo = { git = "https://github.com/sdispater/cleo.git", branch = "develop" }
# pathlib2 = { version = "^2.2", python = "~2.7" }
# pypandoc = { version = "^1.3.3", optional = true }
{% endif %}

[dev-dependencies]
# Development dependencies of the package
# See https://github.com/sdispater/poet#dependencies-and-dev-dependencies
{% if dev_dependencies %}
{% for name, version in dev_dependencies.items() %}
{{ name }} = "{{ version }}"
{% endfor %}
{% endif %}


# CLI scripts
#
# They must follow the following convention:
# {script_name} = "{my.package:executable}"
#
# [scripts]
# poet = 'poet:app.run'
