import unittest
import output
import message
import StringIO

class OutputTestCase(unittest.TestCase):
    def test_responseSerde(self):
        headers = {"headersA": ["valueA1", "valueA2"]}
        body = bytearray("hello world", "utf-8")

        myMessage = message.Message(headers, body)
        statusCode = 200
        status = "Status OK"

        response = message.Response(statusCode, status, myMessage)
        serializedResponse = output.serializeResponse(response)
        deserializedResponse = output.deserializeResponse(StringIO.StringIO(serializedResponse))

        self.assertEqual(response, deserializedResponse)

    def test_simpleMultiMessageFuncWriterTest(self):
        headersA = {"headersA": ["valueA1", "valueA2"]}
        bodyA = bytearray("hello world", "utf-8")

        myMessageA = message.Message(headersA, bodyA)

        statusCodeA = 201
        statusA = "My status A"

        responseA = message.Response(statusCodeA, statusA, myMessageA)

        headersB = {"headersB": ["valueB1", "valueB2"]}
        bodyB = bytearray("hello world asdjfksajd", "utf-8")

        myMessageB = message.Message(headersB, bodyB)

        statusCodeB = 202
        statusB = "My status B"

        responseB = message.Response(statusCodeB, statusB, myMessageB)

        fileobject = StringIO.StringIO()
        funcWriter = output.FuncWriter(fileobject)

        funcWriter.writeMessage(responseA)
        funcWriter.writeMessage(responseB)

        writtenBytes = fileobject.getvalue()
        resuleFileObject = StringIO.StringIO(writtenBytes)

        deserializedResponseA = output.deserializeResponse(resuleFileObject)
        deserializedResponseB = output.deserializeResponse(resuleFileObject)

        self.assertEqual(responseA, deserializedResponseA)
        self.assertEqual(responseB, deserializedResponseB)

    def test_deserializeByteArray(self):
        rawResponse = bytearray(b'\xc8\x00\x00\x00\x02\x00\x00\x00\x4f\x4b\x50\x01\x00\x00\x7b\x22\x54\x61\x73\x6b\x2d\x49\x64\x22\x3a\x20\x5b\x22\x38\x32\x63\x30\x61\x64\x33\x36\x2d\x64\x38\x30\x39\x2d\x35\x63\x64\x37\x2d\x62\x35\x62\x36\x2d\x30\x30\x37\x36\x66\x34\x65\x36\x34\x34\x61\x35\x22\x5d\x2c\x20\x22\x48\x65\x61\x64\x65\x72\x5f\x61\x63\x63\x65\x70\x74\x5f\x65\x6e\x63\x6f\x64\x69\x6e\x67\x22\x3a\x20\x5b\x22\x67\x7a\x69\x70\x22\x5d\x2c\x20\x22\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x4c\x65\x6e\x67\x74\x68\x22\x3a\x20\x5b\x22\x31\x34\x22\x5d\x2c\x20\x22\x48\x65\x61\x64\x65\x72\x5f\x75\x73\x65\x72\x5f\x61\x67\x65\x6e\x74\x22\x3a\x20\x5b\x22\x47\x6f\x2d\x68\x74\x74\x70\x2d\x63\x6c\x69\x65\x6e\x74\x2f\x31\x2e\x31\x22\x5d\x2c\x20\x22\x52\x6f\x75\x74\x65\x22\x3a\x20\x5b\x22\x2f\x73\x6f\x75\x72\x63\x65\x30\x66\x75\x6e\x63\x30\x22\x5d\x2c\x20\x22\x48\x65\x61\x64\x65\x72\x5f\x63\x6f\x6e\x74\x65\x6e\x74\x5f\x6c\x65\x6e\x67\x74\x68\x22\x3a\x20\x5b\x22\x31\x34\x22\x5d\x2c\x20\x22\x52\x65\x71\x75\x65\x73\x74\x5f\x75\x72\x6c\x22\x3a\x20\x5b\x22\x2f\x72\x2f\x6c\x61\x6d\x62\x64\x61\x73\x65\x72\x76\x69\x63\x65\x2f\x73\x6f\x75\x72\x63\x65\x30\x66\x75\x6e\x63\x30\x22\x5d\x2c\x20\x22\x48\x65\x61\x64\x65\x72\x5f\x63\x6f\x6e\x74\x65\x6e\x74\x5f\x74\x79\x70\x65\x22\x3a\x20\x5b\x22\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x6a\x73\x6f\x6e\x22\x5d\x2c\x20\x22\x4d\x65\x74\x68\x6f\x64\x22\x3a\x20\x5b\x22\x50\x4f\x53\x54\x22\x5d\x7d\x0a\x00\x00\x00\x48\x65\x6c\x6c\x6f\x20\x54\x69\x6d\x21')
        resuleFileObject = StringIO.StringIO(rawResponse)
        output.deserializeResponse(resuleFileObject)

if __name__ == '__main__':
    unittest.main()
