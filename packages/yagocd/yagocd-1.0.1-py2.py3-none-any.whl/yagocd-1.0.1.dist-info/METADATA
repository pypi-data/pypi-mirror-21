Metadata-Version: 2.0
Name: yagocd
Version: 1.0.1
Summary: Yet another Python client for ThoughtWorks GoCD REST API.
Home-page: https://github.com/grundic/yagocd
Author: Grigory Chernyshev
Author-email: systray@yandex.ru
License: MIT
Keywords: yagocd
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: ISC License (ISCL)
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Requires-Dist: six
Requires-Dist: requests
Requires-Dist: easydict

|gocd_logo| Yet another GoCD python client
==========================================

    .. image:: https://travis-ci.org/grundic/yagocd.svg?branch=master
       :target: https://travis-ci.org/grundic/yagocd

    .. image:: https://coveralls.io/repos/github/grundic/yagocd/badge.svg?branch=master
       :target: https://coveralls.io/github/grundic/yagocd?branch=master

    .. image:: https://badge.fury.io/py/yagocd.svg
       :target: https://badge.fury.io/py/yagocd

    .. image:: https://readthedocs.org/projects/yagocd/badge/?version=latest
       :target: http://yagocd.readthedocs.io

Introduction
------------
This library is a high level python API wrapper upon ThoughtWorks GoCD REST API.
>From the official documentation:

    Go Continuous Delivery is continuous integration/deployment server,
    which helps you automate and streamline the build-test-release cycle for worry-free.

Using it, you can access to internals of the Pipelines, check their statuses, download Artifacts and more.
It is designed with maximum comfort and productivity from the user perspective, so it should be very easy
to use it in your own project.
More information is available at official `documentation <http://yagocd.readthedocs.io>`_

Installation
------------
.. code-block:: bash

    $ pip install yagocd

Quick example
-------------

.. code-block:: python

    from yagocd import Yagocd

    go = Yagocd(
        server='https://example.com',
        auth=('user', 'password'),
        options={
            'verify': False  # skip verification for SSL certificates.
        }
    )

    for pipeline in go.pipelines:   # Iterate over all pipelines
        for instance in pipeline:   # Iterate over each instance of some pipeline
            for stage in instance:  # Iterate over each stages of some pipeline instance
                for job in stage:   # Iterate over each job of some pipeline
                    for root, folder, files in job.artifacts:  # Iterate over artifacts like `os.walk` manner
                        for artifact in files:
                            print(artifact.data.url)

                    # print property of each job
                    for key, value in job.properties.items():
                        print("{} => {}".format(key, value))

Different implementations of GoCD API
-------------------------------------
Here is list of similar projects, that implements GoCD API:

- `py-gocd [python] <https://github.com/gaqzi/py-gocd/>`_: A Python API for interacting with Go Continuous Delivery
- `gocdapi [python] <https://github.com/joaogbcravo/gocdapi>`_: A Python API for accessing resources and configuring Go (thoughtworks) continuous-delivery servers
- `gomatic [python] <https://github.com/SpringerSBM/gomatic>`_: A Python API for configuring GoCD
- `goapi [ruby] <https://github.com/ThoughtWorksStudios/goapi>`_: Go (http://www.go.cd) API ruby client
- `gocd-api [NodeJS] <https://github.com/birgitta410/gocd-api>`_: Access http://www.go.cd API via nodeJS
- `gocd-api [GoLang] <https://github.com/christer79/gocd-api>`_: An implementation of the gocd API

Licence
-------
`MIT <https://raw.githubusercontent.com/grundic/yagocd/master/LICENSE>`_

.. |gocd_logo| image:: https://raw.githubusercontent.com/grundic/yagocd/master/img/gocd_logo.png


.. :changelog:

Release History
---------------

1.0.0 (2017-04-13)
++++++++++++++++++

**Improvements**
- Added elastic profile support.
- Added package repositories API support.
- Added package management API support.
- Added encryption API support.
- Improvements in `ValueStreamMap`.
- Added enumerations (constants) for stage result and state.
- Reworked artifact manager (breaking change!)
- ETag is now part of resource object (breaking change!)

**Miscellaneous**
- Added support for 16.11.0 version.
- Added support for 17.01.0 version.
- Added support for 17.02.0 version.
- Added support for 17.03.0 version.
- Refactored managers urls and parameters.

0.4.4 (2016-12-01)
++++++++++++++++++

**Improvements**
- Client's manager are now initialized just once, which makes possible to cache the results of their calls.

0.4.3 (2016-11-23)
++++++++++++++++++

**Improvements**
- Improvements in `ValueStreamMap`.
- Added possibility to programmatically disable version check in `Since` decorator, using `ENABLED` flag.

**Miscellaneous**
- Added support for 16.10.1 version.

0.4.2 (2016-10-28)
++++++++++++++++++

**Improvements**
- ValueStreamMap: put dictionary instead of StageInstance.

0.4.1 (2016-10-09)
++++++++++++++++++

**Improvements**
- Added custom exception error, which outputs error in clear format.
- Added support for pluggable SCM materials API.
- Added support for template API.
- Improvements in `ValueStreamMap`.

**Miscellaneous**
- Documentation updated.
- Docker image updated, which used in testing.
- Added support for 16.10.0 version.

0.4.0 (2016-10-01)
++++++++++++++++++

**Improvements**

- Added support for pipeline config API.
- Added support for version API.
- Added support for plugin info API.
- Added support for environments API.
- Added methods for getting different internal information (undocumented): `support` and `process_list`.
- Added magic methods for iterating and key based access for some classes.
- All classes and their methods are now decorated with `@since` decorator, which adds possibility to check
  at run-time whether given functionality already supported in the GoCD server and let's dynamically select
  correct headers.

**Testing**

- Now tests are executed for GoCD version, running in Docker container, which add possibility
  to test for any available version of the server. Also cassettes are also saved individually for
  each GoCD version.
- Added testing for PEP8 and other checks via `flake8`.

0.3.2 (2016-07-26)
++++++++++++++++++

**Improvements**

- Added support of `value_stream_map` functionality.

**Bugfixes**

- Fix return value of `Artifact.fetch` method from text to binary.

0.2.0 (2016-05-24)
++++++++++++++++++

**Improvements**

- Added support of getting server version through parsing `/about` page.
- Added `Confirm: true` header to some API calls.



